@namespace BlazorMdc

@inherits MdcComponentBase

@inject IJSRuntime jsRuntime



<header @ref="headerElem"
        id="app-bar"
        class="@ClassMapper.ToString()"
        style="@StyleMapper.ToString()">

    <div class="mdc-top-app-bar__row">
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
            <button class="mdc-icon-button material-icons mdc-top-app-bar__action-item--unbounded" aria-label="@NavAriaLabel" @onclick="OnNavClicked">@NavIcon</button>
            <span class="mdc-top-app-bar__title">@Title</span>
        </section>
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-end" style="padding-right: 20px;">
            @ChildContent
        </section>
    </div>
</header>



@code {
    //
    //  2020-04-02  Mark Stega
    //              Changed to use class & style mappers
    //
    //  2020-04-13  Mark Stega
    //              Moved ClassMapper to constructor
    //
    [Parameter] public string Title { get; set; }
    [Parameter] public string NavIcon { get; set; }
    [Parameter] public string NavAriaLabel { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback OnNavClicked { get; set; }
    [Parameter] public string ScrollTarget { get; set; }
    [Parameter] public MdcTopAppBarType TopAppBarType { get; set; } = MdcTopAppBarType.Standard;

    ElementReference headerElem;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        ClassMapper
            .Add("mdc-top-app-bar")
            .AddIf($"mdc-top-app-bar--{TopAppBarType.ToString().ToLower()}", () => TopAppBarType != MdcTopAppBarType.Standard && TopAppBarType != MdcTopAppBarType.ShortCollapsed)
            .AddIf($"mdc-top-app-bar--short mdc-top-app-bar--short-collapsed", () => TopAppBarType == MdcTopAppBarType.ShortCollapsed)
            .Add("app-bar");
    }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeAsync<object>("BlazorMdc.topAppBar.init", headerElem, ScrollTarget);
        }
    }
}
