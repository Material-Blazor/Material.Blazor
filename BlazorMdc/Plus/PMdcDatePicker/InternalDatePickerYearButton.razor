@namespace BlazorMdc


<MdcButton OnClick="@OnClickAsync" Label="@DisplayYear.ToString()" Class="@buttonStyleClass" Disabled="@disabled" />


@code {
    //
    //  2020-04-02  Mark Stega
    //              Changed to use class & style mappers
    //
    [Parameter] public int CurrentYear { get; set; }
    [Parameter] public int DisplayYear { get; set; }
    [Parameter] public EventCallback<int> OnItemClickAsync { get; set; }
    [Parameter] public DateTime MinDate { get; set; }
    [Parameter] public DateTime MaxDate { get; set; }


    //private ElementReference elementReference;
    private string buttonStyleClass => $"bmdc-dp-year-pad__button {((DisplayYear == CurrentYear) ? "mdc-button--unelevated" : "")}";


    private bool disabled
    {
        get
        {
            if (MaxDate < new DateTime(DisplayYear, 1, 1))
            {
                return true;
            }

            if (MinDate > new DateTime(DisplayYear, 12, 31))
            {
                return true;
            }

            return false;
        }
    }


    private async Task OnClickAsync()
    {
        await OnItemClickAsync.InvokeAsync(DisplayYear);
    }
}