@namespace BlazorMdc

@typeparam TItem

@inherits MdcValidatingInputComponentBase<TItem>

@inject IJSRuntime jsRuntime


<div class="@ClassMapper.ToString()"
     style="@StyleMapper.ToString()">

    @{ bool isFirst = true; }
    @foreach (var item in ItemArray)
    {
        @if (Vertical && !isFirst)
        {
            <div class="bmdc-mdc-radio-break"></div>
        }

        isFirst = false;
        var itemChecked = EqualityComparer<TItem>.Default.Equals(Value, item.SelectedValue);

        <MdcRadioButton @key="@item"
                        Value="@itemChecked"
                        ButtonContainerClass="@item.ButtonContainerClass"
                        Disabled="@item.Disabled"
                        EnableTouchWrapper="@EnableTouchWrapper"
                        Label="@item.Label"
                        CheckedValue="@item.SelectedValue"
                        RadioGroupName="@radioGroupName"
                        OnClick="@(_ => OnItemClickAsync(item.SelectedValue))" />
    }

</div>

@code {
    //
    //  2020-04-22  Mark Stega
    //              Changed to use the newly created MdcRadioButton
    //
    [Parameter] public IEnumerable<MdcListElement<TItem>> Items { get; set; }
    [Parameter] public bool Vertical { get; set; } = false;
    [Parameter] public MdcItemValidation? ItemValidation { get; set; }
    [Parameter] public bool EnableTouchWrapper { get; set; } = true;


    private string radioGroupName = Utilities.GenerateCssElementSelector();

    private MdcListElement<TItem>[] ItemArray;


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        ItemArray = Items.ToArray();

        MdcItemValidation appliedItemValidation = CascadingDefaults.AppliedItemValidationRadioButtonGroup(ItemValidation);

        await ValidateItemListAsync(ItemArray, appliedItemValidation, OnItemClickAsync);
    }


    private async Task OnItemClickAsync(TItem SelectedValue)
    {
        NativeComponentBoundValue = SelectedValue;
        await Task.CompletedTask;
    }
}
