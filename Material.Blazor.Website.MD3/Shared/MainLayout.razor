@inherits LayoutComponentBase

@inject NavigationManager NavigationService
@inject IJSRuntime JsRuntime

<MBDrawer @ref="@Drawer"
          IsDismissible="true">

    <nav class="mdc-list">
        <MBListItem LeadingIcon="money" Label="Numeric Decimal Field" @onclick="@(() => ListItemClickHandler("numericdecimalfield"))" />
        <MBListItem LeadingIcon="text_format" Label="Text Field" @onclick="@(() => ListItemClickHandler("textfield"))" />
    </nav>
</MBDrawer>

<div class="mdc-drawer-app-content">
    <MBTopAppBar Title="Material.Blazor"
                 @onclick="@SideBarToggle"
                 NavIcon="menu"
                 ScrollTarget="#main-content"
                 TopAppBarType="@MBTopAppBarType.Dense"
                 class="app-bar mdc-top-app-bar--short-has-action-item mdc-elevation--z5">
    </MBTopAppBar>
</div>


@code {
    private const string materialDocRef = "https://github.com/material-components/material-components-web/tree/master/packages/";

    private MBDrawer Drawer { get; set; }

    private MBMenu Menu { get; set; }

    private string Theme { get; set; } = "material-default-theme";

    private async Task OpenMenuAsync()
    {
        await Menu.ToggleAsync();
    }

    protected async Task ThemeSetterAsync(string theme)
    {
        await JsRuntime.InvokeAsync<object>("material_blazor_website.themeSetter.setTheme", theme, true);
        Theme = theme;
        StateHasChanged();
    }


    private void ListItemClickHandler(string NavigationReference)
    {
        Drawer.NotifyNavigation();
        NavigationService.NavigateTo(NavigationReference);
    }

    private void SideBarToggle()
    {
        Drawer.Toggle();
    }
}
