@page "/icon"

@inject IMBToastService ToastService

<DemonstrationPage ComponentAndPageName="Icon"
                   DetailedArticle="Icon"
                   MaterialWebPage=""
                   Title="Icon Demonstration">
    <Description>
        <p>
            Shows several icons.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-12">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <div class="mdc-layout-grid__inner">
                        <div class="mdc-layout-grid__cell--span-12">
                            <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                                Tailored Icons
                            </h2>

                            <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                                Shows how icons can be tailored.
                            </h3>
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBTextField @bind-Value="@mbIconColor"
                                         Label="Icon color (ex: 'red' or '#FF0000')"
                                         style="margin: 0px;" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            @*
                            <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">Icon fill</h3>
                            <Material.Blazor.MD2.MBSlider @bind-Value="@mbIconFill"
                            ContinuousInputDelay="300"
                            DecimalPlaces="1"
                            NumSteps="10"
                            EventType="@MBInputEventTypeMD2.OnInputThrottled"
                            SliderType="@MBSliderTypeMD2.DiscreteWithTickmarks"
                            ValueMax="1"
                            ValueMin="0" />
                            *@

                            <Material.Blazor.MD2.MBSelect @bind-Value="@mbIconFill"
                                                          Items="@iconFills"
                                                          ItemValidation="@MBItemValidation.DefaultToFirst"
                                                          Label="Icon fill"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />

                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@iconGradient"
                                                          Items="@iconGradients"
                                                          ItemValidation="@MBItemValidation.DefaultToFirst"
                                                          Label="Icon gradient"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@iconSize"
                                                          Items="@iconSizes"
                                                          ItemValidation="@MBItemValidation.DefaultToFirst"
                                                          Label="Icon size"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@iconStyle"
                                                          Items="@iconStyles"
                                                          ItemValidation="@MBItemValidation.DefaultToFirst"
                                                          Label="Icon style"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@iconWeight"
                                                          Items="@iconWeights"
                                                          ItemValidation="@MBItemValidation.DefaultToFirst"
                                                          Label="Icon weight"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-12" style="display: flex; flex-direction: column;">
                            <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                                MBIcon with Parameters using Typography
                            </h2>
                            <div class="mdc-layout-grid__cell--span-12" style="display: flex; flex-direction: row;">
                                <MBIconWithParameters IconColor="@mbIconColor"
                                                      IconFill="@mbIconFill"
                                                      IconGradient="@mbIconGradient"
                                                      IconName="close"
                                                      IconSize="@mbIconSize"
                                                      IconStyle="@mbIconStyle"
                                                      IconWeight="@mbIconWeight" />
                                &nbsp;
                                <MBIconWithParameters IconColor="@mbIconColor"
                                                      IconFill="@mbIconFill"
                                                      IconGradient="@mbIconGradient"
                                                      IconName="home"
                                                      IconSize="@mbIconSize"
                                                      IconStyle="@mbIconStyle"
                                                      IconWeight="@mbIconWeight" />
                                &nbsp;
                                <MBIconWithParameters IconColor="@mbIconColor"
                                                      IconFill="@mbIconFill"
                                                      IconGradient="@mbIconGradient"
                                                      IconName="menu"
                                                      IconSize="@mbIconSize"
                                                      IconStyle="@mbIconStyle"
                                                      IconWeight="@mbIconWeight" />
                                &nbsp;
                                <MBIconWithParameters IconColor="@mbIconColor"
                                                      IconFill="@mbIconFill"
                                                      IconGradient="@mbIconGradient"
                                                      IconName="search"
                                                      IconSize="@mbIconSize"
                                                      IconStyle="@mbIconStyle"
                                                      IconWeight="@mbIconWeight" />
                                &nbsp;
                                <MBIconWithParameters IconColor="@mbIconColor"
                                                      IconFill="@mbIconFill"
                                                      IconGradient="@mbIconGradient"
                                                      IconName="settings"
                                                      IconSize="@mbIconSize"
                                                      IconStyle="@mbIconStyle"
                                                      IconWeight="@mbIconWeight" />
                                &nbsp;
                            </div>
                        </div>

                        <div class="mdc-layout-grid__cell--span-12" style="display: flex; flex-direction: column;">
                            <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                                MBIcon with Descriptor using &lt;md-icon&gt;
                            </h2>
                            <div class="mdc-layout-grid__cell--span-12" style="display: flex; flex-direction: row;">
@*                                 <MBIcon Descriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: @mbIconColor,
                                                  fill: @mbIconFill,
                                                  gradient: @mbIconGradient,
                                                  name: "close",
                                                  size: @mbIconSize,
                                                  style: @mbIconStyle,
                                                  weight: @mbIconWeight)" />
 *@                                &nbsp;
                                <MBIcon Descriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: @mbIconColor,
                                                  fill: @mbIconFill,
                                                  gradient: @mbIconGradient,
                                                  name: "home",
                                                  size: @mbIconSize,
                                                  style: @mbIconStyle,
                                                  weight: @mbIconWeight)" />
                                &nbsp;
@*                                 <MBIcon Descriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: @mbIconColor,
                                                  fill: @mbIconFill,
                                                  gradient: @mbIconGradient,
                                                  name: "menu",
                                                  size: @mbIconSize,
                                                  style: @mbIconStyle,
                                                  weight: @mbIconWeight)" />
                                &nbsp;
                                <MBIcon Descriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: @mbIconColor,
                                                  fill: @mbIconFill,
                                                  gradient: @mbIconGradient,
                                                  name: "search",
                                                  size: @mbIconSize,
                                                  style: @mbIconStyle,
                                                  weight: @mbIconWeight)" />
                                &nbsp;
                                <MBIcon Descriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: @mbIconColor,
                                                  fill: @mbIconFill,
                                                  gradient: @mbIconGradient,
                                                  name: "settings",
                                                  size: @mbIconSize,
                                                  style: @mbIconStyle,
                                                  weight: @mbIconWeight)" />
                                &nbsp;
 *@                            </div>
                        </div>
                    </div>
                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>
    </PageContent>
</DemonstrationPage>

@code {
    private string mbIconColor { get; set; } = "black";



    MBSelectElement<decimal>[] iconFills = new MBSelectElement<decimal>[]
    {
        new MBSelectElement<decimal> { SelectedValue = 0.0m, LeadingLabel = "0.0" },
        new MBSelectElement<decimal> { SelectedValue = 0.1m, LeadingLabel = "0.1" },
        new MBSelectElement<decimal> { SelectedValue = 0.2m, LeadingLabel = "0.2" },
        new MBSelectElement<decimal> { SelectedValue = 0.3m, LeadingLabel = "0.3" },
        new MBSelectElement<decimal> { SelectedValue = 0.4m, LeadingLabel = "0.4" },
        new MBSelectElement<decimal> { SelectedValue = 0.5m, LeadingLabel = "0.5" },
        new MBSelectElement<decimal> { SelectedValue = 0.6m, LeadingLabel = "0.6" },
        new MBSelectElement<decimal> { SelectedValue = 0.7m, LeadingLabel = "0.7" },
        new MBSelectElement<decimal> { SelectedValue = 0.8m, LeadingLabel = "0.8" },
        new MBSelectElement<decimal> { SelectedValue = 0.9m, LeadingLabel = "0.9" },
        new MBSelectElement<decimal> { SelectedValue = 1.0m, LeadingLabel = "1.0" },
            };

    private decimal _iconFill = 1.0m;
    private decimal mbIconFill
    {
        get => _iconFill;
        set
        {
            _iconFill = value;

            ToastService.ShowToast(heading: "Icon Fill", message: $"Value: '{mbIconFill.ToString()}'", level: MBToastLevel.Success, showIcon: false);
        }
    }
    // private decimal mbIconFill = 1.0m;


    MBSelectElement<string>[] iconGradients = new MBSelectElement<string>[]
    {
        new MBSelectElement<string> { SelectedValue = "LowEmphasis", LeadingLabel = "Low emphasis" },
        new MBSelectElement<string> { SelectedValue = "NormalEmphasis", LeadingLabel = "Normal emphasis" },
        new MBSelectElement<string> { SelectedValue = "HighEmphasis", LeadingLabel = "High emphasis" },
            };

    private MBIconGradient mbIconGradient = MBIconGradient.NormalEmphasis;
    private string _iconGradient = "NormalEmphasis";
    private string iconGradient
    {
        get => _iconGradient;
        set
        {
            _iconGradient = value;

            mbIconGradient = _iconGradient switch
            {
                "LowEmphasis" => MBIconGradient.LowEmphasis,
                "NormalEmphasis" => MBIconGradient.NormalEmphasis,
                "HighEmphasis" => MBIconGradient.HighEmphasis,
                _ => throw new Exception("Unknown icon gradient"),
            };

            ToastService.ShowToast(heading: "Icon Gradient", message: $"Value: '{mbIconGradient.ToString()}'", level: MBToastLevel.Success, showIcon: false);
        }
    }



    MBSelectElement<string>[] iconSizes = new MBSelectElement<string>[]
    {
        new MBSelectElement<string> { SelectedValue = "20", LeadingLabel = "20px" },
        new MBSelectElement<string> { SelectedValue = "24", LeadingLabel = "24px" },
        new MBSelectElement<string> { SelectedValue = "40", LeadingLabel = "40px" },
        new MBSelectElement<string> { SelectedValue = "48", LeadingLabel = "48px" },
            };

    private MBIconSize mbIconSize = MBIconSize.Size24;
    private string _iconSize = "24";
    private string iconSize
    {
        get => _iconSize;
        set
        {
            _iconSize = value;

            mbIconSize = _iconSize switch
            {
                "20" => MBIconSize.Size20,
                "24" => MBIconSize.Size24,
                "40" => MBIconSize.Size40,
                "48" => MBIconSize.Size48,
                _ => throw new Exception("Unknown icon Size"),
            };

            ToastService.ShowToast(heading: "Icon Size", message: $"Value: '{_iconSize}'", level: MBToastLevel.Success, showIcon: false);
        }
    }



    MBSelectElement<string>[] iconStyles = new MBSelectElement<string>[]
    {
        new MBSelectElement<string> { SelectedValue = "outlined", LeadingLabel = "Outlined" },
        new MBSelectElement<string> { SelectedValue = "rounded", LeadingLabel = "Rounded" },
        new MBSelectElement<string> { SelectedValue = "sharp", LeadingLabel = "Sharp" }
            };

    private MBIconStyle mbIconStyle = MBIconStyle.Outlined;
    private string _iconStyle = "outlined";
    private string iconStyle
    {
        get => _iconStyle;
        set
        {
            _iconStyle = value;

            mbIconStyle = _iconStyle switch
            {
                "outlined" => MBIconStyle.Outlined,
                "rounded" => MBIconStyle.Rounded,
                "sharp" => MBIconStyle.Sharp,
                _ => throw new Exception("Unknown icon style"),
            };

            ToastService.ShowToast(heading: "Icon style", message: $"Value: '{_iconStyle}'", level: MBToastLevel.Success, showIcon: false);
        }
    }



    MBSelectElement<string>[] iconWeights = new MBSelectElement<string>[]
    {
        new MBSelectElement<string> { SelectedValue = "100", LeadingLabel = "100" },
        new MBSelectElement<string> { SelectedValue = "200", LeadingLabel = "200" },
        new MBSelectElement<string> { SelectedValue = "300", LeadingLabel = "300" },
        new MBSelectElement<string> { SelectedValue = "400", LeadingLabel = "400" },
        new MBSelectElement<string> { SelectedValue = "500", LeadingLabel = "500" },
        new MBSelectElement<string> { SelectedValue = "600", LeadingLabel = "600" },
        new MBSelectElement<string> { SelectedValue = "700", LeadingLabel = "700" },
            };

    private MBIconWeight mbIconWeight = MBIconWeight.W400;
    private string _iconWeight = "400";
    private string iconWeight
    {
        get => _iconWeight;
        set
        {
            _iconWeight = value;

            mbIconWeight = _iconWeight switch
            {
                "100" => MBIconWeight.W100,
                "200" => MBIconWeight.W200,
                "300" => MBIconWeight.W300,
                "400" => MBIconWeight.W400,
                "500" => MBIconWeight.W500,
                "600" => MBIconWeight.W600,
                "700" => MBIconWeight.W700,
                _ => throw new Exception("Unknown icon weight"),
            };

            ToastService.ShowToast(heading: "Icon Weight", message: $"Value: '{_iconWeight}'", level: MBToastLevel.Success, showIcon: false);
        }
    }

}
