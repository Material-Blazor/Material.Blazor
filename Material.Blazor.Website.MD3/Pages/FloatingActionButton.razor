@page "/floatingactionbutton"

@inject IMBToastService ToastService



<DemonstrationPage ComponentAndPageName="FloatingActionButton"
                   MaterialWebPage="fab"
                   MinDensity="MBDensity.Minus3"
                   RequiresDisableSelection="true"
                   Title="Floating Action Button Demonstration">
    <Description>
        <p>
            Shows an icon buttons and density.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Floating Action Buttons showing all five styles
                    </h2>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                      FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Surface"
                                      Label="Surface"
                                      @onclick="@(() => ButtonClick("FAB surface"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                Label="Primary"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                      FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Secondary"
                                      Label="Secondary"
                                      @onclick="@(() => ButtonClick("FAB secondary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Tertiary"
                                                Label="Tertiary"
                                                @onclick="@(() => ButtonClick("FAB tertiary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Branded"
                                                Label="Branded"
                                                @onclick="@(() => ButtonClick("FAB branded"))" />
                    </p>

                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>

        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Floating Action Buttons showing all five styles lowered
                    </h2>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Surface"
                                                IsLowered="true"
                                                Label="Surface"
                                                @onclick="@(() => ButtonClick("FAB surface"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                IsLowered="true"
                                                Label="Primary"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Secondary"
                                                IsLowered="true"
                                                Label="Secondary"
                                                @onclick="@(() => ButtonClick("FAB secondary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Tertiary"
                                                IsLowered="true"
                                                Label="Tertiary"
                                                @onclick="@(() => ButtonClick("FAB tertiary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Branded"
                                                IsLowered="true"
                                                Label="Branded"
                                                @onclick="@(() => ButtonClick("FAB branded"))" />
                    </p>

                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>

        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Floating Action Buttons showing all three sizes. Note that an Extended FAB (FAB with label) is only medium sized.
                    </h2>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonSize="@MBFloatingActionButtonSize.Small"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonSize="@MBFloatingActionButtonSize.Medium"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonSize="@MBFloatingActionButtonSize.Large"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                    <p>
                        <MBFloatingActionButton IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                                  color: "darkblue",
                                                  name: "check")"
                                                FloatingActionButtonSize="@MBFloatingActionButtonSize.Large"
                                                FloatingActionButtonStyle="@MBFloatingActionButtonStyle.Primary"
                                                Label="Large set but ignored"
                                                @onclick="@(() => ButtonClick("FAB primary"))" />
                    </p>

                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>

    </PageContent>
</DemonstrationPage>



@code {
    private bool toggle { get; set; }

    private void ButtonClick(string notification)
    {
        ToastService.ShowToast(heading: "Button Clicked", message: notification, level: MBToastLevel.Success, showIcon: false);
    }

    private void ComponentValueChanged(bool value, string componentName)
    {
        ToastService.ShowToast(heading: $"{componentName} Clicked", message: $"Two way binding Value: {value}", level: MBToastLevel.Success, showIcon: false);
    }

}