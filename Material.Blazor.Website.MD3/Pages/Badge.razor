@page "/badge"

@inject IMBToastService ToastService



<DemonstrationPage ComponentAndPageName="Badge"
                   Title="Badge Demonstration">
    <Description>
        <p>
            Shows badges set in html elements and embedded in buttons, icon buttons and icon toggle buttons.
        </p>
    </Description>

    <Controls>
        <div class="mdc-layout-grid__inner">
            <div class="mdc-layout-grid__cell--span-4">
                <MBSwitch @bind-Value="@Exited"
                          TrailingLabelPLUS="Applies the 'mb-badge--exited' class" />
            </div>

            <div class="mdc-layout-grid__cell--span-4">
                <MBOutlinedTextField @bind-Value="@GeneralValue"
                                     Label="Long Badge Value" />
            </div>

            <div class="mdc-layout-grid__cell--span-4">
                <MBOutlinedTextField @bind-Value="@ButtonValue"
                                     Label="Short Badge Value" />
            </div>
        </div>
    </Controls>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Badges in HTML elements
                    </h2>

                    <p class="mdc-typography--body1">
                        A badge must be the first element inside its parent div. The parent div must have both border and padding set to zero width.
                    </p>

                    <div style="height: 60px; width: 200px; background: var(--mb-color-blue-200); margin-top: 12px;">
                        <MBBadge BadgeStyle="MBBadgeStyle.ValueBearing"
                                 Value="@GeneralValue"
                                 Exited="@Exited" />
                        <p class="mdc-typography--body1" style="margin-left: 12px; line-height: 60px;">Value Bearing badge</p>
                    </div>

                    <div style="height: 60px; width: 200px; background: var(--mb-color-blue-200); margin-top: 12px;">
                        <MBBadge BadgeStyle="MBBadgeStyle.ValueBearing"
                                 Value="@ButtonValue"
                                 Exited="@Exited" />
                        <p class="mdc-typography--body1" style="margin-left: 12px; line-height: 60px;">Value Bearing badge</p>
                    </div>

                    <div style="height: 60px; width: 200px; background: var(--mb-color-blue-200); margin-top: 12px;">
                        <MBBadge BadgeStyle="MBBadgeStyle.BlankFullSized"
                                 Value="@ButtonValue"
                                 Exited="@Exited" />
                        <p class="mdc-typography--body1" style="margin-left: 12px; line-height: 60px;">Blank Full Size badge</p>
                    </div>

                    <div style="height: 60px; width: 200px; background: var(--mb-color-blue-200); margin-top: 12px;">
                        <MBBadge BadgeStyle="MBBadgeStyle.Dot"
                                 Exited="@Exited" />
                        <p class="mdc-typography--body1" style="margin-left: 12px; line-height: 60px;">Dot badge</p>
                    </div>
                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>


        <div class="mdc-layout-grid__cell--span-12">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Embedded in buttons, icon buttons, checkbox, radiobuttons, switch, and text components
                    </h2>

                    <div class="mdc-layout-grid__inner">
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBButton ButtonStyle="@MBButtonStyleMD2.Outlined"
                                                          Label="Outlined Button"
                                                          HasBadge="true"
                                                          BadgeValue="@GeneralValue"
                                                          BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBButton ButtonStyle="@MBButtonStyleMD2.Outlined"
                                                          Label="Outlined Button"
                                                          HasBadge="true"
                                                          BadgeValue="@ButtonValue"
                                                          BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBButton ButtonStyle="@MBButtonStyleMD2.Outlined"
                                                          Label="Outlined Button"
                                                          HasBadge="true"
                                                          BadgeStyle="@MBBadgeStyle.Dot"
                                                          BadgeExited="@Exited" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBIconButton IconColor="darkblue"
                                                              IconName="home"
                                                              HasBadge="true"
                                                              BadgeValue="@GeneralValue"
                                                              BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBIconButton IconColor="darkblue"
                                                              IconName="home"
                                                              HasBadge="true"
                                                              BadgeValue="@ButtonValue"
                                                              BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBIconButton IconColor="darkblue"
                                                              IconName="home"
                                                              HasBadge="true"
                                                              BadgeStyle="@MBBadgeStyle.Dot"
                                                              BadgeExited="@Exited" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBCheckbox @bind-Value="@ToggleValue"
                                        HasBadgePLUS="true"
                                        BadgeValuePLUS="@GeneralValue"
                                        BadgeExitedPLUS="@Exited"
                                        TrailingLabelPLUS="Checkbox" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBCheckbox @bind-Value="@ToggleValue"
                                        HasBadgePLUS="true"
                                        BadgeValuePLUS="@ButtonValue"
                                        BadgeExitedPLUS="@Exited"
                                        TrailingLabelPLUS="Checkbox" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBCheckbox @bind-Value="@ToggleValue"
                                        HasBadgePLUS="true"
                                        BadgeStylePLUS="@MBBadgeStyle.Dot"
                                        BadgeExitedPLUS="@Exited"
                                        TrailingLabelPLUS="Checkbox" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBRadioButton @bind-Value="@Animal"
                                           HasBadgePLUS="true"
                                           BadgeValuePLUS="@GeneralValue"
                                           BadgeExitedPLUS="@Exited"
                                           style="margin-right: 1em; "
                                           TrailingLabelPLUS=@AnimalEnum.Dog.ToString()
                                           RadioGroupName="animal-group"
                                           TargetCheckedValue=@AnimalEnum.Dog />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBRadioButton @bind-Value="@Animal"
                                           HasBadgePLUS="true"
                                           BadgeValuePLUS="@ButtonValue"
                                           BadgeExitedPLUS="@Exited"
                                           style="margin-right: 1em; "
                                           TrailingLabelPLUS=@AnimalEnum.Fish.ToString()
                                           RadioGroupName="animal-group"
                                           TargetCheckedValue=@AnimalEnum.Fish />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBRadioButton @bind-Value="@Animal"
                                           HasBadgePLUS="true"
                                           BadgeStylePLUS="@MBBadgeStyle.Dot"
                                           BadgeExitedPLUS="@Exited"
                                           style="margin-right: 1em; "
                                           TrailingLabelPLUS=@AnimalEnum.Zebra.ToString()
                                           RadioGroupName="animal-group"
                                           TargetCheckedValue=@AnimalEnum.Zebra />
                        </div>


                        <div class="mdc-layout-grid__cell--span-4">
                            <MBSwitch @bind-Value="@ToggleValue"
                                      HasBadgePLUS="true"
                                      BadgeValuePLUS="@GeneralValue"
                                      BadgeExitedPLUS="@Exited"
                                      TrailingLabelPLUS="Switch" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBSwitch @bind-Value="@ToggleValue"
                                      HasBadgePLUS="true"
                                      BadgeValuePLUS="@ButtonValue"
                                      BadgeExitedPLUS="@Exited"
                                      TrailingLabelPLUS="Switch" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBSwitch @bind-Value="@ToggleValue"
                                      HasBadgePLUS="true"
                                      BadgeStylePLUS="@MBBadgeStyle.Dot"
                                      BadgeExitedPLUS="@Exited"
                                      TrailingLabelPLUS="Switch" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <MBOutlinedTextField @bind-Value="@TextFieldValue"
                                                 HasBadge="true"
                                                 BadgeValue="@GeneralValue"
                                                 BadgeExited="@Exited"
                                                 Label="Text Field" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBOutlinedTextField @bind-Value="@TextFieldValue"
                                                 HasBadge="true"
                                                 BadgeValue="@ButtonValue"
                                                 BadgeExited="@Exited"
                                                 Label="Text Field" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <MBOutlinedTextField @bind-Value="@TextFieldValue"
                                                 HasBadge="true"
                                                 BadgeStyle="@MBBadgeStyle.Dot"
                                                 BadgeExited="@Exited"
                                                 Label="Text Field" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@SelectValue"
                                                          Items="@KittenBreeds"
                                                          ItemValidation="@MBItemValidation.NoSelection"
                                                          HasBadge="true"
                                                          BadgeValue="@GeneralValue"
                                                          BadgeExited="@Exited"
                                                          Label="Select"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@SelectValue"
                                                          Items="@KittenBreeds"
                                                          ItemValidation="@MBItemValidation.NoSelection"
                                                          HasBadge="true"
                                                          BadgeValue="@ButtonValue"
                                                          BadgeExited="@Exited"
                                                          Label="Select"
                                                          SelectInputStyle="@MBSelectInputStyleMD2.Outlined" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                            <Material.Blazor.MD2.MBSelect @bind-Value="@SelectValue"
                                                          Items="@KittenBreeds"
                                                          ItemValidation="@MBItemValidation.NoSelection"
                                                          HasBadge="true"
                                                          BadgeStyle="@MBBadgeStyle.Dot"
                                                          BadgeExited="@Exited"
                                                          Label="Select"
                                                          SelectInputStyle="MBSelectInputStyleMD2.Outlined" />
                        </div>

                        @*
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBIconButtonToggle @bind-Value="@ToggleValue"
                        IconOff="mood"
                        IconOn="sentiment_dissatisfied"
                        HasBadge="true"
                        BadgeValue="@GeneralValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBIconButtonToggle @bind-Value="@ToggleValue"
                        IconOff="mood"
                        IconOn="sentiment_dissatisfied"
                        HasBadge="true"
                        BadgeValue="@ButtonValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBIconButtonToggle @bind-Value="@ToggleValue"
                        IconOff="mood"
                        IconOn="sentiment_dissatisfied"
                        HasBadge="true"
                        BadgeStyle="@MBBadgeStyle.Dot"
                        BadgeExited="@Exited" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                        <MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeValue="@GeneralValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeValue="@ButtonValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeStyle="@MBBadgeStyle.Dot"
                        BadgeExited="@Exited" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                        <MBDatePicker @bind-Value="@Date"
                        Label="Filled"
                        DateFormat="ddd MMM dd, yyyy"
                        MaxDate="@Max"
                        MenuSurfacePositioning="@MBMenuSurfacePositioning.Fixed"
                        MinDate="@Min"
                        HasBadge="true"
                        BadgeValue="@GeneralValue"
                        BadgeExited="@Exited"
                        SelectInputStyle="MBSelectInputStyle.Filled" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBDatePicker @bind-Value="@Date"
                        Label="Filled"
                        DateFormat="ddd MMM dd, yyyy"
                        MaxDate="@Max"
                        MenuSurfacePositioning="@MBMenuSurfacePositioning.Fixed"
                        MinDate="@Min"
                        HasBadge="true"
                        BadgeValue="@ButtonValue"
                        BadgeExited="@Exited"
                        SelectInputStyle="MBSelectInputStyle.Filled" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <MBDatePicker @bind-Value="@Date"
                        Label="Filled"
                        DateFormat="ddd MMM dd, yyyy"
                        MaxDate="@Max"
                        MenuSurfacePositioning="@MBMenuSurfacePositioning.Fixed"
                        MinDate="@Min"
                        HasBadge="true"
                        BadgeStyle="@MBBadgeStyle.Dot"
                        BadgeExited="@Exited"
                        SelectInputStyle="MBSelectInputStyle.Filled" />
                        </div>

                        <div class="mdc-layout-grid__cell--span-4">
                        <Material.Blazor.MD2.MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@Material.Blazor.MD2.MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeValue="@GeneralValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <Material.Blazor.MD2.MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@Material.Blazor.MD2.MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeValue="@ButtonValue"
                        BadgeExited="@Exited" />
                        </div>
                        <div class="mdc-layout-grid__cell--span-4">
                        <Material.Blazor.MD2.MBSegmentedButtonSingle @bind-Value="@SegmentedButtonValue"
                        Items="@ThisThat"
                        ItemValidation="@Material.Blazor.MD2.MBItemValidation.NoSelection"
                        HasBadge="true"
                        BadgeStyle="@MBBadgeStyle.Dot"
                        BadgeExited="@Exited" />
                        </div>

                        *@

                    </div>
                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>
    </PageContent>
</DemonstrationPage>



@code {
    private enum AnimalEnum { Dog, Fish, Zebra };
    private AnimalEnum _animal;
    private AnimalEnum Animal
    {
        get => _animal;
        set
        {
            _animal = value;
        }
    }
    private bool Exited { get; set; } = false;
    private string GeneralValue { get; set; } = "99+";
    private string ButtonValue { get; set; } = "!";
    private bool ToggleValue { get; set; } = false;
    private string TextFieldValue { get; set; } = "Text field value";

    private string SelectValue { get; set; } = KittenBreeds[0].SelectedValue;

    private static Material.Blazor.MBSelectElement<string>[] KittenBreeds = new Material.Blazor.MBSelectElement<string>[]
    {
        new MBSelectElement<string> { SelectedValue = "brit-short", LeadingLabel = "British Shorthair" },
        new MBSelectElement<string> { SelectedValue = "russ-blue", LeadingLabel = "Russian Blue" },
        new MBSelectElement<string> { SelectedValue = "ice-invis", LeadingLabel = "Icelandic Invisible" }
    };

    //private string SegmentedButtonValue { get; set; } = ThisThat[0].SelectedValue;

    // private static MBIconBearingSelectElement<string>[] ThisThat = new MBIconBearingSelectElement<string>[]
    // {
    //     new MBIconBearingSelectElement<string> { SelectedValue = "this", TrailingLabel = "This" },
    //     new MBIconBearingSelectElement<string> { SelectedValue = "that", TrailingLabel = "That" }
    // };

    private DateTime Min { get; set; } = new DateTime(2019, 12, 14);
    private DateTime Max { get; set; } = new DateTime(2097, 6, 14);
    private DateTime Date { get; set; } = DateTime.Today;
}