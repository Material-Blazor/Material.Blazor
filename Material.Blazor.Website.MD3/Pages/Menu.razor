@page "/menu"

@inject IMBToastService ToastService

@using Material.Blazor
@using Material.Blazor.MenuClose

<DemonstrationPage ComponentAndPageName="Menu"
                   Title="Menu Demonstration">
    <Description>
        <p>
            Demonstrates a menu with list items, list dividers, and a menu selection group.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Menu Example
                    </h2>

                    <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Click the button to open the menu.
                    </h3>

                    <p>
                        <MBButton ButtonStyle="@MBButtonStyle.Outlined"
                                  Label="Open MD2 Menu"
                                  IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                        name: "menu")"
                                  @onclick="@OpenMenuAsync" />
                    </p>

                    <div class="mdc-menu-surface--anchor">
                        <Material.Blazor.MD2.MBMenu @ref="@MenuElement">
                            <Material.Blazor.MD2.MBListItem Label="One"
                                                            @onclick="@(() => OnClickHandler("One"))" />
                            <Material.Blazor.MD2.MBListItem Label="Two"
                                                            @onclick="@(() => OnClickHandler("Two"))" />
                            <Material.Blazor.MD2.MBListItem Label="Three"
                                                            @onclick="@(() => OnClickHandler("Three"))" />
                            <Material.Blazor.MD2.MBListDivider />
                            <Material.Blazor.MD2.MBListItem Label="Four"
                                                            LeadingIcon="home"
                                                            @onclick="@(() => OnClickHandler("Four"))" />
                            <Material.Blazor.MD2.MBListItem Label="Five"
                                                            LeadingIcon="alarm"
                                                            @onclick="@(() => OnClickHandler("Five"))" />
                            <Material.Blazor.MD2.MBListItem Label="Six"
                                                            LeadingIcon="shield"
                                                            @onclick="@(() => OnClickHandler("Six"))" />
                            <Material.Blazor.MD2.MBListDivider />
                            @*                             <Material.Blazor.MD2.MBMenuSelectionGroup>
                            *@                                <Material.Blazor.MD2.MBListItem IsSelectedMenuItem="@SevenSelected"
                                                                                              Label="Seven"
                                                                                              LeadingIcon="done"
                                                                                              @onclick="@(() => OnClickHandler("Seven"))" />
                            <Material.Blazor.MD2.MBListItem IsSelectedMenuItem="@EightSelected"
                                                            Label="Eight"
                                                            LeadingIcon="done"
                                                            @onclick="@(() => OnClickHandler("Eight"))" />
                            @*                             </Material.Blazor.MD2.MBMenuSelectionGroup>
                            *@                            <Material.Blazor.MD2.MBListDivider />
                            <Material.Blazor.MD2.MBListItem Disabled="true"
                                                            Label="Nine (disabled)"
                                                            @onclick="@(() => OnClickHandler("Nine"))" />
                        </Material.Blazor.MD2.MBMenu>
                    </div>

                    <p>
                        <MBMenu ButtonIconDescriptor="@MBIcon.IconDescriptorConstructor(
                                    name: "menu",
                                    color: "darkblue")"
                                ButtonIconIsTrailing="false"
                                ButtonLabel="Open MD3 Menu"
                                ButtonLabelColor="darkblue"
                                ButtonStyle="@MBButtonStyle.Outlined"
                                MenuItems="@menuItems"
                                MenuPositioning="MBMenuPositioning.Popover"
                                @onmenuclose="@OnMenuCloseClickHandler" />
                    </p>
                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>
    </PageContent>
</DemonstrationPage>



@code {
    private Material.Blazor.MD2.MBMenu MenuElement { get; set; }
    private bool SevenSelected { get; set; }
    private bool EightSelected { get; set; }

    private MBMenuItem[] menuItems = new MBMenuItem[]
    {
            new MBMenuItem {
                Headline="One",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem {
                Headline="Two",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem {
                Headline="Three",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem
            {
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Four",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "home",
                                    color: "darkblue")},
            new MBMenuItem {
                Headline="Five",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                TrailingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "alarm",
                                    color: "darkblue")},
            new MBMenuItem {
                Headline="Six",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "home",
                                    color: "darkblue"),
                TrailingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "alarm",
                                    color: "darkblue")},
            new MBMenuItem
            {
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Seven",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "done",
                                    color: "darkgreen"),
                SuppressLeadingIcon=true },
            new MBMenuItem {
                Headline="Eight",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "done",
                                    color: "darkgreen"),
                SuppressLeadingIcon=true },
            new MBMenuItem
            {
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Nine (disabled)",
                HeadlineColor="darkblue",
                IsDisabled=true,
                MenuItemType=MBMenuItemType.Regular },
    };

    private async Task OpenMenuAsync()
    {
        await MenuElement.ToggleAsync();
    }

    protected void OnClickHandler(string NavigationReference)
    {
        var result = NavigationReference;
        ToastService.ShowToast(heading: "Menu result", message: $"Value: '{result}'", level: MBToastLevel.Success, showIcon: false);

        SevenSelected = (result == "Seven") ? !SevenSelected : SevenSelected;
        menuItems[6].SuppressLeadingIcon = !SevenSelected;
        EightSelected = (result == "Eight") ? !EightSelected : EightSelected;
        menuItems[7].SuppressLeadingIcon = !EightSelected;
    }

    protected void OnMenuCloseClickHandler(MenuCloseEventArgs args)
    {
        ToastService.ShowToast(heading: "MW3 menu close", message: $"Value: '{args.CustomProperty2}'", level: MBToastLevel.Success, showIcon: false);
    }
}
