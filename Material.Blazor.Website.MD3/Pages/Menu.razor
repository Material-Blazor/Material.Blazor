@page "/menu"

@inject IMBToastService ToastService

@using Material.Blazor

<DemonstrationPage ComponentAndPageName="Menu"
                   Title="Menu Demonstration">
    <Description>
        <p>
            Demonstrates a menu with list items, list dividers, and a menu selection group.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <Material.Blazor.MD2.MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Menu Example
                    </h2>

                    <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Click the button or the icon to open the menu. Open the menu again after selecting either 'seven' or 'eight'.
                    </h3>
                    <p>
                    <MBMenu ButtonIconIsTrailing="false"
                            ButtonLabel="Open MD3 Menu"
                            ButtonLabelColor="darkblue"
                            ButtonStyle="@MBButtonStyle.Outlined"
                            IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                    name: "menu",
                                    color: "darkblue")"
                            MenuItems="@menuItems"
                            MenuPositioning="MBMenuPositioning.Popover"
                            @onmenuselectionreport="OnMenuSelectionReportHandler" />
                    </p>
                    <p>
                        <MBMenu AnchorType="@MBMenuAnchorType.Icon"
                                IconDescriptor="@MBIcon.IconDescriptorConstructor(
                                    name: "menu",
                                    color: "darkblue")"
                                MenuItems="@menuItems"
                                MenuPositioning="MBMenuPositioning.Popover"
                                @onmenuselectionreport="OnMenuSelectionReportHandler" />
                    </p>
                </Primary>
            </Material.Blazor.MD2.MBCard>
        </div>
    </PageContent>
</DemonstrationPage>



@code {
    private bool SevenSelected { get; set; }
    private bool EightSelected { get; set; }

    private MBMenuItem[] menuItems = new MBMenuItem[]
    {
            new MBMenuItem {
                Headline="One",
                HeadlineColor="darkblue",
                Identifier="0",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem {
                Headline="Two",
                HeadlineColor="darkblue",
                Identifier="1",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem {
                Headline="Three",
                HeadlineColor="darkblue",
                Identifier="2",
                MenuItemType=MBMenuItemType.Regular },
            new MBMenuItem
            {
                Identifier="3",
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Four",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                Identifier="4",
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "home",
                                    color: "darkblue")},
            new MBMenuItem {
                Headline="Five",
                HeadlineColor="darkblue",
                MenuItemType=MBMenuItemType.Regular,
                Identifier="5",
                TrailingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "alarm",
                                    color: "darkblue")},
            new MBMenuItem {
                Headline="Six",
                HeadlineColor="darkblue",
                Identifier="6",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "home",
                                    color: "darkblue"),
                TrailingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "alarm",
                                    color: "darkblue")},
            new MBMenuItem
            {
                Identifier="7",
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Seven",
                HeadlineColor="darkblue",
                Identifier="8",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "done",
                                    color: "darkgreen"),
                SuppressLeadingIcon=true },
            new MBMenuItem {
                Headline="Eight",
                HeadlineColor="darkblue",
                Identifier="9",
                MenuItemType=MBMenuItemType.Regular,
                LeadingIcon=MBIcon.IconDescriptorConstructor(
                                    name: "done",
                                    color: "darkgreen"),
                SuppressLeadingIcon=true },
            new MBMenuItem
            {
                Identifier="10",
                MenuItemType=MBMenuItemType.Divider
            },
            new MBMenuItem {
                Headline="Nine (disabled)",
                HeadlineColor="darkblue",
                Identifier="11",
                IsDisabled=true,
                MenuItemType=MBMenuItemType.Regular },
    };

    protected void OnMenuSelectionReportHandler(MenuSelectionReportEventArgs args)
    {
        ToastService.ShowToast(heading: "MW3 menu close", message: $"ID: '{args.menuID}'", level: MBToastLevel.Success, showIcon: false);

        SevenSelected = (args.menuHeadline == "Seven") ? !SevenSelected : SevenSelected;
        menuItems[Convert.ToInt32(args.menuID)].SuppressLeadingIcon = !SevenSelected;
        EightSelected = (args.menuHeadline == "Eight") ? !EightSelected : EightSelected;
        menuItems[Convert.ToInt32(args.menuID)].SuppressLeadingIcon = !EightSelected;
    }
}
