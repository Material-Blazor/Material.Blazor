@namespace BlazorMdc.Demo

@page "/radiobuttons"

@using BlazorMdc

<h1 class="mdc-typography--headline4">Radio button samples</h1>

<p>See <code>RadioButtonsSample.razor</code> for sources.</p>


<hr />
<h5 class="mdc-typography--headline5">Orphan radio buttons</h5>

<p>
    <MdcRadioButton @bind-Value="@animal"
                    TargetCheckedValue=@animalEnum.dog
                    Label=@animalEnum.dog.ToString()
                    RadioGroupName="demoGroup" />
    <MdcRadioButton @bind-Value="@animal"
                    TargetCheckedValue=@animalEnum.fish
                    Label=@animalEnum.fish.ToString()
                    RadioGroupName="demoGroup" />
    <MdcRadioButton @bind-Value="@animal"
                    TargetCheckedValue=@animalEnum.zebra
                    Label=@animalEnum.zebra.ToString()
                    RadioGroupName="demoGroup" />
</p>
<p>
    <MdcRadioButton @bind-Value="@animal"
                    TargetCheckedValue=@animalEnum.dog
                    Label=@repeatedDogLabel
                    RadioGroupName="repeatGroup" />

</p>
<p style="margin-bottom: 4em;">Selected animal: '<strong>@animal.ToString()</strong>'</p>


<hr />
<h5 class="mdc-typography--headline5">Horizontal radio button group</h5>

<PMdcRadioButtonGroup @bind-Value="@kittenBreed"
                      Items="stringItems"
                      ItemValidation="@BEnum.ItemValidation.DefaultToFirst" />

<PMdcRadioButtonGroup @bind-Value="@kittenBreed"
                      Items="stringItems"
                      ItemValidation="@BEnum.ItemValidation.DefaultToFirst" />

<p style="margin-bottom: 4em;">Selected: '<strong>@(kittenBreed ?? "")</strong>'</p>


<hr />
<h5 class="mdc-typography--headline5">Vertical radio button group</h5>

<PMdcRadioButtonGroup @bind-Value="@colour"
                      Items="colourItems"
                      Vertical="true"
                      EnableTouchWrapper="false" />

<p style="margin-bottom: 4em;">Selected: '<strong>@(colour.ToString())</strong>'</p>


<hr />


@code {
    enum animalEnum { dog, fish, zebra };
    animalEnum animal = animalEnum.fish;
    string repeatedDogLabel => animalEnum.dog.ToString() + " repeated";


    string kittenBreed;
    BModel.ListElement<string>[] stringItems = new BModel.ListElement<string>[]
    {
        new BModel.ListElement<string> { SelectedValue = "brit-short", Label = "British Shorthair" },
        new BModel.ListElement<string> { SelectedValue = "russ-blue", Label = "Russian Blue" },
        new BModel.ListElement<string> { SelectedValue = "ice-invis", Label = "Icelandic Invisible" }
                    };


    Colour colour = Colour.Orange;
    enum Colour { Red, Orange, Yellow, Green, Blue, Indigo, Violet };
    IEnumerable<BModel.ListElement<Colour>> colourItems => from c in (Colour[])Enum.GetValues(typeof(Colour))
                                                       select new BModel.ListElement<Colour>
                                                       {
                                                           SelectedValue = c,
                                                           Label = c.ToString() + ((c == Colour.Blue) ? " (disabled)" : ""),
                                                           Disabled = c == Colour.Blue
                                                       };
}
