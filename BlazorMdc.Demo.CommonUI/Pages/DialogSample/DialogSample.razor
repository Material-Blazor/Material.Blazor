@namespace BlazorMdc.Demo

@page "/dialog"


@if (!HideHeading)
{
    <h1 class="mdc-typography--headline4">Dialog samples</h1>

    <p>See <code>DialogSample.razor</code> for sources.</p>

    <p>Note that the user can also press 'escape' or click in the scrim to dismiss the dialog (unless those actions are disabled, see example 4 below), and this produces a different result string.</p>
}


<p><BMdc.MdcButton Label="Show general dialog" @onclick="@ShowDialog1"></BMdc.MdcButton></p>

<p>Result: <strong>'@(result1 ?? "")'</strong></p>
<p>Button result: <strong>'@(radioButtonResult1 ?? "")'</strong></p>

<BMdc.MdcDialog @ref="@dialog1" 
           Title="General dialog">
    <Body>
        <p>Please choose a fruit.</p>
        <BMdc.MdcCheckbox @bind-Value="@checkMe" Label="Check me" />
        <PMdcRadioButtonGroup @bind-Value="@radioButtonResult1"
                              Items="stringItems"
                              Vertical="true"
                              ItemValidation="@BEnum.ItemValidation.DefaultToFirst" />
    </Body>
    <Buttons>
        <BMdc.MdcButton Label="Orange" DialogAction="orange"></BMdc.MdcButton>
        <BMdc.MdcButton Label="Apple" DialogAction="apple" ButtonStyle="@BEnum.ButtonStyle.Text"></BMdc.MdcButton>
    </Buttons>
</BMdc.MdcDialog>



<p style="margin-top: 3rem;"><BMdc.MdcButton Label="Show default confirmation dialog" @onclick="@ShowDialog2"></BMdc.MdcButton></p>

<p>Result: <strong>'@(result2 ?? "")'</strong></p>

<PMdcConfirmationDialog @ref="@dialog2" 
                        Title="Default confirmation dialog" />



<p style="margin-top: 3rem;"><BMdc.MdcButton Label="Show tailored confirmation dialog" @onclick="@ShowDialog3"></BMdc.MdcButton></p>

<p>Result: <strong>'@(result3 ?? "")'</strong></p>

<PMdcConfirmationDialog @ref="@dialog3" 
                        Title="Tailored confirmation dialog" ConfirmationPhrase="overridden confirmation" 
                        ActionPhrase="to play handball" 
                        ConfirmationDisabled="@disableInput">
    <Body>
        <p>Some markup before the confirmation message and input.</p>
        <p><BMdc.MdcCheckbox @bind-Value="@disableInput" Label="Disable confirmation input field" /></p>
    </Body>
    <UnconfirmedButtons>
        <BMdc.MdcButton Label="Bish" LeadingIcon="alarm_on" DialogAction="bish" />
        <BMdc.MdcButton Label="Bash" LeadingIcon="accessibility_new" DialogAction="bash" />
        <BMdc.MdcButton Label="Bosh" LeadingIcon="sports_handball" Disabled="true" DialogAction="bosh" ButtonStyle="BEnum.ButtonStyle.ContainedRaised" />
    </UnconfirmedButtons>
    <ConfirmedButtons>
        <BMdc.MdcButton Label="Bish" LeadingIcon="alarm_on" DialogAction="bish" />
        <BMdc.MdcButton Label="Bash" LeadingIcon="accessibility_new" DialogAction="bash" />
        <BMdc.MdcButton Label="Bosh" LeadingIcon="sports_handball" DialogAction="bosh" ButtonStyle="BEnum.ButtonStyle.ContainedRaised" />
    </ConfirmedButtons>
</PMdcConfirmationDialog>


<p style="margin-top: 3rem;"><BMdc.MdcButton Label="Show general dialog with scrim and escape disabled (using HideAsync)" @onclick="@ShowDialog4"></BMdc.MdcButton></p>

<p>Logical result: <strong>'@(result4 ?? "")'</strong></p>
<p>Dialog result: <strong>'@(dialogResult4 ?? "")'</strong></p>

<BMdc.MdcDialog @ref="@dialog4" Title="General dialog with scrim and escape disabled (using HideAsync)"
           ScrimClickAction=""
           EscapeKeyAction="">
    <Body>
        <p>Please choose a fruit.</p>
        <p><BMdc.MdcCheckbox @bind-Value="@checkMe" Label="Check me" /></p>
    </Body>
    <Buttons>
        <BMdc.MdcButton Label="Orange" @onclick="orangeClick"></BMdc.MdcButton>
        <BMdc.MdcButton Label="Apple" @onclick="appleClick" ButtonStyle="@BEnum.ButtonStyle.Text"></BMdc.MdcButton>
    </Buttons>
</BMdc.MdcDialog>


<p style="margin-top: 3rem;"><BMdc.MdcButton Label="Dialog with Date Picker & OverflowVisible" @onclick="@ShowDialog5"></BMdc.MdcButton></p>

<p>Result: <strong>'@(date5.ToString("d") ?? "")'</strong></p>

<BMdc.MdcDialog @ref="@dialog5" Title="Date Picker Dialog"
           OverflowVisible="true">
    <Body>
        <p>Set the date.</p>
        <PMdcDatePicker Label="The date" @bind-Value="@date5" SelectInputStyle="BEnum.SelectInputStyle.Outlined" MinDate="minDate" MaxDate="maxDate"></PMdcDatePicker>
    </Body>
    <Buttons>
        <BMdc.MdcButton Label="Orange" DialogAction="orange"></BMdc.MdcButton>
        <BMdc.MdcButton Label="Apple" DialogAction="apple" ButtonStyle="@BEnum.ButtonStyle.Text"></BMdc.MdcButton>
    </Buttons>
</BMdc.MdcDialog>


<p style="margin-top: 3rem;"><BMdc.MdcButton Label="Confirmation Dialog with Date Picker & OverflowVisible" @onclick="@ShowDialog6"></BMdc.MdcButton></p>

<p>Result: <strong>'@(date6.ToString("d") ?? "")'</strong></p>

<PMdcConfirmationDialog @ref="@dialog6" 
                        Title="Date Picker Confirmation Dialog" 
                        OverflowVisible="true">
    <Body>
        <p>Set the date.</p>
        <PMdcDatePicker Label="The date" @bind-Value="@date6" SelectInputStyle="BEnum.SelectInputStyle.Outlined" MinDate="minDate" MaxDate="maxDate"></PMdcDatePicker>
    </Body>
</PMdcConfirmationDialog>






@code {
    [Parameter] public bool HideHeading { get; set; }

    BMdc.MdcDialog dialog1;
    string result1;
    string radioButtonResult1;
    bool checkMe;
    bool disableInput;

    async Task ShowDialog1()
    {
        result1 = await dialog1.ShowAsync();
    }

    BModel.ListElement<string>[] stringItems = new BModel.ListElement<string>[]
{
        new BModel.ListElement<string> { SelectedValue = "brit-short", Label = "British Shorthair" },
        new BModel.ListElement<string> { SelectedValue = "russ-blue", Label = "Russian Blue" },
        new BModel.ListElement<string> { SelectedValue = "ice-invis", Label = "Icelandic Invisible" }
 };

    PMdcConfirmationDialog dialog2;
    string result2;

    async Task ShowDialog2()
    {
        result2 = await dialog2.ShowAsync();
    }

    PMdcConfirmationDialog dialog3;
    string result3;

    async Task ShowDialog3()
    {
        result3 = await dialog3.ShowAsync();
    }

    BMdc.MdcDialog dialog4;
    string dialogResult4;
    string result4;

    async Task ShowDialog4()
    {
        dialogResult4 = await dialog4.ShowAsync();
    }

    async Task appleClick()
    {
        await dialog4.HideAsync();
        result4 = "apple (via OnClick)";
    }

    async Task orangeClick()
    {
        await dialog4.HideAsync();
        result4 = "orange (via OnClick)";
    }

    BMdc.MdcDialog dialog5;
    DateTime minDate = new DateTime(2015, 1, 1);
    DateTime maxDate = new DateTime(2025, 12, 31);
    DateTime date5 = DateTime.Today;

    async Task ShowDialog5()
    {
        _ = await dialog5.ShowAsync();
    }

    PMdcConfirmationDialog dialog6;
    DateTime date6 = DateTime.Today;

    async Task ShowDialog6()
    {
        _ = await dialog6.ShowAsync();
    }
}
