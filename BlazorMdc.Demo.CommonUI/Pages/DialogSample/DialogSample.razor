@namespace BlazorMdc.Demo

@page "/dialog"


@if (!HideHeading)
{
    <h1 class="@MdcTypography.Heading4">Dialog samples</h1>

    <p>See <code>DialogSample.razor</code> for sources.</p>

    <p>Note that the user can also press 'escape' or click in the scrim to dismiss the dialog (unless those actions are disabled, see example 4 below), and this produces a different result string.</p>
}


<p><MdcButton Label="1 - Show general dialog" OnClick="@ShowDialog1"></MdcButton></p>

<p>Result: <strong>'@(result1 ?? "")'</strong></p>

<MdcDialog @ref="@dialog1" Title="General dialog">
    <Body>
        <p>Please choose a fruit.</p>
        <p><MdcCheckbox @bind-Value="@checkMe" Label="Check me" /></p>
    </Body>
    <Buttons>
        <MdcButton Label="Orange" DialogAction="orange"></MdcButton>
        <MdcButton Label="Apple" DialogAction="apple" ButtonStyle="@MdcButtonStyle.Text"></MdcButton>
    </Buttons>
</MdcDialog>



<p style="margin-top: 3rem;"><MdcButton Label="2 - Show default confirmation dialog" OnClick="@ShowDialog2"></MdcButton></p>

<p>Result: <strong>'@(result2 ?? "")'</strong></p>

<PMdcConfirmationDialog @ref="@dialog2" Title="Default confirmation dialog"></PMdcConfirmationDialog>



<p style="margin-top: 3rem;"><MdcButton Label="3 - Show tailored confirmation dialog" OnClick="@ShowDialog3"></MdcButton></p>

<p>Result: <strong>'@(result3 ?? "")'</strong></p>

<PMdcConfirmationDialog @ref="@dialog3" Title="Tailored confirmation dialog" InputText="overridden confirmation" ActionText="to play handball" InputDisabled="@disableInput">
    <Body>
        <p>Some markup before the confirmation message and input.</p>
        <p><MdcCheckbox @bind-Value="@disableInput" Label="Disable confirmation input field" /></p>
    </Body>
    <UnconfirmedButtons>
        <MdcButton Label="Bish" LeadingIcon="alarm_on" DialogAction="bish" />
        <MdcButton Label="Bash" LeadingIcon="accessibility_new" DialogAction="bash" />
        <MdcButton Label="Bosh" LeadingIcon="sports_handball" Disabled="true" DialogAction="bosh" ButtonStyle="MdcButtonStyle.ContainedRaised" />
    </UnconfirmedButtons>
    <ConfirmedButtons>
        <MdcButton Label="Bish" LeadingIcon="alarm_on" DialogAction="bish" />
        <MdcButton Label="Bash" LeadingIcon="accessibility_new" DialogAction="bash" />
        <MdcButton Label="Bosh" LeadingIcon="sports_handball" DialogAction="bosh" ButtonStyle="MdcButtonStyle.ContainedRaised" />
    </ConfirmedButtons>
</PMdcConfirmationDialog>


<p style="margin-top: 3rem;"><MdcButton Label="4 - Show general dialog with scrim and escape disabled" OnClick="@ShowDialog4"></MdcButton></p>

<p>Result: <strong>'@(result4 ?? "")'</strong></p>

<MdcDialog @ref="@dialog4" Title="General dialog with scrim and escape disabled"
           ScrimClickAction=""
           EscapeKeyAction="">
    <Body>
        <p>Please choose a fruit.</p>
        <p><MdcCheckbox @bind-Value="@checkMe" Label="Check me" /></p>
    </Body>
    <Buttons>
        <MdcButton Label="Orange" DialogAction="orange"></MdcButton>
        <MdcButton Label="Apple" DialogAction="apple" ButtonStyle="@MdcButtonStyle.Text"></MdcButton>
    </Buttons>
</MdcDialog>





@code {
    [Parameter] public bool HideHeading { get; set; }

    MdcDialog dialog1;
    string result1;
    bool checkMe;
    bool disableInput;

    async Task ShowDialog1()
    {
        result1 = await dialog1.ShowAsync();
    }

    PMdcConfirmationDialog dialog2;
    string result2;

    async Task ShowDialog2()
    {
        result2 = await dialog2.ShowAsync();
    }

    PMdcConfirmationDialog dialog3;
    string result3;

    async Task ShowDialog3()
    {
        result3 = await dialog3.ShowAsync();
    }

    MdcDialog dialog4;
    string result4;

    async Task ShowDialog4()
    {
        result4 = await dialog4.ShowAsync();
    }

}
