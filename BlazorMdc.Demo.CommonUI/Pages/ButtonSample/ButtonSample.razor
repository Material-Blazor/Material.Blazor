@namespace BlazorMdc.Demo

@page "/button"

<h1 class="@MdcTypography.Heading4">Button samples</h1>

See <code>ButtonSample.razor</code> for sources.

<p>
    <MdcButton Label="Default style" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Contained raised" ButtonStyle="@MdcButtonStyle.ContainedRaised" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Contained unelevated" ButtonStyle="@MdcButtonStyle.ContainedUnelevated" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Outlined" ButtonStyle="@MdcButtonStyle.Outlined" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Text" ButtonStyle="@MdcButtonStyle.Text" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Disabled" Disabled="true" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Leading icon" LeadingIcon="album" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Trailing icon" TrailingIcon="speed" OnClick="@LogMessage" />
</p>

<p>
    <MdcButton Label="Trailing icon with style of 'margin-left: 5em;'"
               TrailingIcon="speed"
               ButtonStyle="MdcButtonStyle.ContainedRaised"
               OnClick="@LogMessage"
               Style="margin-left: 5em;" />
</p>

<p>
    An icon button -> <MdcIconButton Icon="@MdcIcons.Icon__access_alarms" OnClick="@LogMessage" />
</p>

<ul>
    @foreach (var logEntry in log)
    {
        <li>@logEntry</li>
    }
</ul>

@code {
    //
    //  2020-04-07  Mark Stega
    //              Changed sample with 'padding-left: 5em' to 'margin-left: 5em' and added 'raised' style (which
    //              also implies 'contained'). Visually both are identical with a 'text' style but adding
    //              'raised' shows that the intended indent of the button is occurring.
    //
    List<string> log = new List<string>();

    void LogMessage()
        => log.Add("You clicked");
}
