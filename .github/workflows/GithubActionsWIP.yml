name: GithubActionsWIP

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize, closed]

  workflow_dispatch:
    inputs:
      baseline:
        description: 'The repo to use as baseline. If left empty, it defaults to the current version of MB, i.e. material-blazor.github.io/Material.Blazor.Current. Enter the github username, e.g. stefanloerwald'
        required: false
        default: ''

env:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  outputDocFx: ${{github.workspace}}\siteDocFx
  outputMB: ${{github.workspace}}/siteMB
  outputWeb: ${{github.workspace}}/siteWeb
  projectMB: 'Material.Blazor/Material.Blazor.csproj'
  projectTest: 'Material.Blazor.Test/Material.Blazor.Test.csproj'
  projectWeb: 'Material.Blazor.Website.WebAssembly/Material.Blazor.Website.WebAssembly.csproj'

jobs:
  is-on-fork:
    name: Running on a fork?
    runs-on: ubuntu-latest
    if: github.repository != 'Material-Blazor/Material.Blazor'
    steps:
    - name: Nothing to see here
      run: echo ""
  is-on-material-blazor:
    name: Running on Material-Blazor/Material.Blazor?
    runs-on: ubuntu-latest
    if: github.repository == 'Material-Blazor/Material.Blazor'
    steps:
    - name: Nothing to see here
      run: echo ""
############################################################################################################
# This job is only to display some CI information
############################################################################################################
  info:
    name: Display CI information
    runs-on: windows-latest

    steps:

    - name: DotNet info
      run: dotnet --info
      if: github.event_name != 'workflow_dispatch'

    - name: Set ciSuffix as env variable
      run: echo "ciSuffix=ci.$(date +'%Y-%m-%d--%H%M')" >> $GITHUB_ENV
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Echo ciSuffix
      run: echo "CI suffix is $ciSuffix"
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Get the branch
      id: get_branch
      run: echo ::set-output name=branch::${GITHUB_REF/refs\/heads\//}
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Get the pullrequest
      id: get_pullrequest
      run: echo ::set-output name=pullrequest::${GITHUB_REF/refs\/pull\//}
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Get the tag
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Show branch name Ꙫ
      run: echo GitHub indicates that this is a branch push request of ${{steps.get_branch.outputs.branch}}
      if: github.event_name != 'workflow_dispatch' && contains(github.ref, 'refs/heads')

    - name: Show PR name Ꙫ
      run: echo GitHub indicates that this is a pull request called ${{steps.get_pullrequest.outputs.pullrequest}}
      if: github.event_name != 'workflow_dispatch' && contains(github.ref, 'refs/pull')

    - name: Show Tag name Ꙫ
      run: echo GitHub indicates that this is a tag creation with ${{steps.get_tag.outputs.tag}}
      if: github.event_name != 'workflow_dispatch' && contains(github.ref, 'refs/tag')
      
############################################################################################################
# Run the test project. Should this fail, the deploy step (job deployghpages) is skipped
# This is soft-skipped when we only want to perform a comparison (github.event_name != 'workflow_dispatch')
############################################################################################################
  test:
    name: Run .NET tests
    runs-on: ubuntu-latest

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      if: github.event_name != 'workflow_dispatch'

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false
      if: github.event_name != 'workflow_dispatch'

    - name: Run the acceptance tests as the first build action and cancel out the rest if it fails
      run: dotnet test --configuration ${{env.buildConfiguration}} ${{env.projectTest}}
      if: github.event_name != 'workflow_dispatch'
      
############################################################################################################
# Build documentation
# This is soft-skipped when we only want to perform a comparison (github.event_name != 'workflow_dispatch')
# A soft-skip is necessary, because the comparison job has to occur after build-docs, if it is built.
############################################################################################################
  build-documentation:
    name: Build documentation
    runs-on: windows-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false
      if: github.event_name != 'workflow_dispatch'

    - name: Create documentation 🔧
      run: .\docfx\docfx docfx.json
      env:
        DOCFX_SOURCE_BRANCH_NAME: main
      if: github.event_name != 'workflow_dispatch'

    - name: Upload Documentation Artifacts 🔺 # The project is then uploaded as an artifact named 'siteDocFx'.
      uses: actions/upload-artifact@v1
      with:
        name: siteDocFx
        path: siteDocFx
      if: github.event_name != 'workflow_dispatch' 

############################################################################################################
# Build website
# This is soft-skipped when we only want to perform a comparison (github.event_name != 'workflow_dispatch')
# A soft-skip is necessary, because the comparison job has to occur after build-website, if it is built.
############################################################################################################
  build-website:
    name: Build website
    runs-on: windows-latest

    steps:
    - name: Set ciSuffix as env variable
      run: echo "ciSuffix=ci.$(date +'%Y-%m-%d--%H%M')" >> $GITHUB_ENV
      shell: bash
      if: github.event_name != 'workflow_dispatch'

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false
      if: github.event_name != 'workflow_dispatch'

    - name: Build Website 🔧
      run: dotnet build --configuration ${env:buildConfiguration} --version-suffix ${env:ciSuffix} ${env:projectWeb}
      if: github.event_name != 'workflow_dispatch'
      
    - name: Publish Website 🔧
      run: dotnet publish --no-build --configuration ${env:buildConfiguration} --output ${env:outputWeb} --version-suffix ${env:ciSuffix} ${env:projectWeb}
      if: github.event_name != 'workflow_dispatch'

    - name: Upload Website Artifacts 🔺 # The website is then uploaded as an artifact named 'siteWeb'.
      uses: actions/upload-artifact@v1
      with:
        name: siteWeb
        path: siteWeb
      if: github.event_name != 'workflow_dispatch'

############################################################################################################
# Build package
# This is hard-skipped when we only want to perform a comparison (github.event_name != 'workflow_dispatch')
############################################################################################################
  build-package:
    name: Build nuget package
    needs: [test]

    runs-on: windows-latest
    if: github.event_name != 'workflow_dispatch'

    steps:
    - name: Set ciSuffix as env variable
      run: echo "ciSuffix=ci.$(date +'%Y-%m-%d--%H%M')" >> $GITHUB_ENV
      shell: bash

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Build Material.Blazor 🔧
      run: dotnet build --configuration ${env:buildConfiguration} --version-suffix ${env:ciSuffix} ${env:projectMB}

    - name: Generate the NuGet package 🔧
      run: dotnet pack --no-build --configuration ${env:buildConfiguration} --output ${env:outputMB} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --version-suffix ${env:ciSuffix} ${env:projectMB}

    - name: Display MaterialBlazor package output Ꙫ
      run: dir ${env:outputMB}

# We'd like to push to a the main repository but now getting errors of authorization

    - name: Upload Package (Main repository) 🔺
      run: nuget push ${env:outputMB}\*.nupkg -Source https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      if: (github.repository == 'Material-Blazor/Material.Blazor') && (github.event_name == 'push') && false

# We'd like to push to a forked repository; The push appears to work but the packages are not visible
# Pending a service response we only do the push of the CI build in the Material-Blazor/Material.Blazor repository

    - name: Upload Package (Forked repository) 🔺
      run: nuget push ${env:outputMB}\*.nupkg -Source https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GH_PAT}}
      if: (github.repository != 'Material-Blazor/Material.Blazor') && (github.event_name == 'push') && false



############################################################################################################
# permission check
# On forks, we want to limit deploy-on-PR to users with write permission on the fork.
# This step will set the output variable has-permission to true/false accordingly.
# In any job that requires the permission, simply
# - add `needs: [permissions]`
# - add `if: needs.permissions.outputs.has-permission`
############################################################################################################
  permissions:
    name: Check permissions
    runs-on: ubuntu-latest
    steps:
      # Check for write permission
      - name: Check user permission
        id: check
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      has-permission: ${{ steps.check.outputs.has-permission }}

############################################################################################################
# deployghpages
# We deploy to GH pages in the following conditions
# - on any fork on push
# - on any fork on PR by an authorized user
# We NEVER deploy to GH pages on Material-Blazor/Material.Blazor in this WIP workflow:
# Material.Blazor.Current is handled by deployghpages-mbcurrent below.
#
# This is soft-skipped when we only want to perform a comparison (github.event_name != 'workflow_dispatch')
# A soft-skip is necessary, because the comparison job has to occur after build-website, if it is built.
############################################################################################################
  deployghpages:
    name: Deploy to GitHub pages
    needs: [test, build-documentation, build-website, permissions, is-on-fork]

    if: (needs.permissions.outputs.has-permission)

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false
      if: github.event_name != 'workflow_dispatch'

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteDocFx
      if: github.event_name != 'workflow_dispatch'

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteWeb
      if: github.event_name != 'workflow_dispatch'

    - name: Configure deployment directory structure Ꙫ
      run: mv siteWeb/wwwroot deployroot; mv siteDocFx deployroot/docs
      if: github.event_name != 'workflow_dispatch'

    # this step rewrites the base href
    - name: Base Href Rewrite 👉
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: 'deployroot/index.html'
        base_href: '/Material.Blazor/'
      if: github.event_name != 'workflow_dispatch'

    # this step deploys to the current repo's gh-pages branch
    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
        token: ${{secrets.GH_PAT}}
        branch: gh-pages
        folder: 'deployroot'
      if: github.event_name != 'workflow_dispatch'

############################################################################################################
# deployghpages-mbcurrent
# The current version of Material.Blazor is viewable on GH-pages in addition to material-blazor.com
############################################################################################################
  deployghpages-mbcurrent:
    name: Deploy to GitHub pages (Material-Blazor/Material.Blazor.Current)
    needs: [test, build-documentation, build-website, permissions, is-on-material-blazor]
    if: (github.event_name == 'push')

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteDocFx

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteWeb

    - name: Configure deployment directory structure Ꙫ
      run: mv siteWeb/wwwroot deployroot; mv siteDocFx deployroot/docs

    # this step rewrites the base href when we are in the main repo and about to deploy to the Material.Blazor.Current repo
    - name: Base Href Rewrite 👉
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: 'deployroot/index.html'
        base_href: '/Material.Blazor.Current/'

    # this step deploys to Material-Blazor/Material.Blazor.Current when we are in the main repo
    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
        token: ${{secrets.GH_PAT}}
        branch: gh-pages
        folder: 'deployroot'
        repository-name: Material-Blazor/Material.Blazor.Current

############################################################################################################
# comparison
############################################################################################################
  # job 1: identify all the pages that should be compared
  findpages:
    name: Find pages to compare
    needs: [deployghpages]
    if: (!contains(github.event.head_commit.message, '[no-compare]'))
    outputs:
      pages: ${{ steps.setpages.outputs.pages }}
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false
      
    - name: Find pages
      id: setpages
      # all blazor pages are in the folder Material.Blazor.Website/Pages and are razor files: find Material.Blazor.Website/Pages -name *.razor
      # Collect all route attributes in them (@page "/pagename"): grep "@page" -h
      # Everything between the quotation mark is the page route: sed 's/.*"\(.*\)".*/"\1"/'
      # We need the result as a comma-separated list, not line by line: paste -sd ","
      run: |
        allpages=$(find Material.Blazor.Website/Pages -name *.razor | xargs grep "@page" -h | sed 's/.*"\(.*\)".*/"\1"/' | paste -sd ",")
        echo "::set-output name=pages::[${allpages}]"
  # job 2: perform comparisons
  compare:
    name: Compare pages
    needs: [findpages]
    runs-on: ubuntu-latest
    # we use the result of the last job to parallelize the crawling of pages
    strategy:
      matrix:
        label: ${{fromJSON(needs.findpages.outputs.pages)}}
    steps:
    - name: Create output directories
      run: mkdir baseline fork report
    - name: Create baseline URL prefix
      id: baselineprefix
      run: |
        [ "${{ github.event.inputs.baseline }}" = "" ] && prefix="material-blazor.github.io/Material.Blazor.Current" || prefix="${{ github.event.inputs.baseline }}.github.io/Material.Blazor"
        echo "::set-output name=prefix::${prefix}"
    - name: Crawl baseline page
      uses: stefanloerwald/HeadlessChrome@v1.0.1
      with:
        page: https://${{ steps.baselineprefix.outputs.prefix }}${{matrix.label}}
        outputfile: baseline${{matrix.label}}.html
        maxretries: 5
        retryongrepmatch: 'blazor-error-ui" style|splash-background-video' # if there is an error on page or the page contains the video splash screen, retry, as it's not the page we actually want
        virtualtimebudget: 2000000
    - name: Crawl this fork's page
      uses: stefanloerwald/HeadlessChrome@v1.0.1
      with:
        page: https://${{github.repository_owner}}.github.io/Material.Blazor${{matrix.label}}
        outputfile: fork${{matrix.label}}.html
        maxretries: 5
        retryongrepmatch: 'blazor-error-ui" style|splash-background-video' # if there is an error on page or the page contains the video splash screen, retry, as it's not the page we actually want
        virtualtimebudget: 2000000
    # A few things need to be ignored to make a sensible comparison:
    # some files have integrity hashes. Those change often, so ignore those
    # many elements have GUIDs as attributes etc. GUIDs are usually generated dynamically, so differ on each page render
    - name: normalize
      run: |
        grep -v "base href" baseline${{matrix.label}}.html | sed 's/integrity="\(.*\)"/integrity="..."/' | sed 's/[a-f0-9]\{8\}-[a-f0-9]\{4\}-[a-f0-9]\{4\}-[a-f0-9]\{4\}-[a-f0-9]\{12\}/guid/g' > tmp
        mv tmp baseline${{matrix.label}}.html        
        grep -v "base href" fork${{matrix.label}}.html | sed 's/integrity="\(.*\)"/integrity="..."/' | sed 's/[a-f0-9]\{8\}-[a-f0-9]\{4\}-[a-f0-9]\{4\}-[a-f0-9]\{4\}-[a-f0-9]\{12\}/guid/g' > tmp
        mv tmp fork${{matrix.label}}.html
    # We only want to see the differences, so we run diff with -d
    # We also don't want to be notified of whitespace-only changes, so we ignore those with -w
    # The exit code of diff is non-zero when there is a non-empty difference, but we need to continue running this job regardless
    - name: diff
      run: |
        echo "### Differences on page '${{matrix.label}}'" > report${{matrix.label}}.md
        echo "\`\`\`diff" >> report${{matrix.label}}.md
        diff -d -w baseline${{matrix.label}}.html fork${{matrix.label}}.html >> report${{matrix.label}}.md || true
        echo "\`\`\`" >> report${{matrix.label}}.md
    # We need to pass the report on to the next build job, so we need to upload it as artifact
    - name: Upload report artifact
      uses: actions/upload-artifact@v1
      with:
        name: report
        path: report${{matrix.label}}.md
  # step 3: aggregate/summarise comparisons
  aggregate:
    name: Aggregate comparison results
    needs: [compare]
    runs-on: ubuntu-latest
    steps:
    - name: Download all the individual reports
      uses: actions/download-artifact@v1
      with:
        name: report
    - name: Create baseline URL prefix
      id: baselineprefix
      run: |
        [ "${{ github.event.inputs.baseline }}" = "" ] && prefix="material-blazor.github.io/Material.Blazor.Current" || prefix="${{ github.event.inputs.baseline }}.github.io/Material.Blazor"
        echo "::set-output name=prefix::${prefix}"
    - name: Aggregate reports
      run: |
        echo "# Comparison between ${{ steps.baselineprefix.outputs.prefix }} and ${{github.actor}}.github.io/Material.Blazor" > all_reports.md
        echo "Number of pages compared:" >> all_reports.md
        ls -a -1 report/.*md report/*md | wc -l >> all_reports.md
        cat report/.*md report/*md >> all_reports.md
    - name: Summarise report for auto-generated issue
      run: |
        echo "Number of pages compared:" > meta_report.md
        ls -a -1 report/.*md report/*md | wc -l >> meta_report.md
        echo ""  >> meta_report.md
        echo "Estimates on size of difference per page:"  >> meta_report.md
        wc -l report/.*md report/*md >> meta_report.md
        echo "" >> meta_report.md
        echo "The report is available as artifact on https://github.com/${{github.actor}}/Material.Blazor/actions/runs/${{github.run_id}}" >> meta_report.md
    - name: Upload report artifact
      uses: actions/upload-artifact@v1
      with:
        name: report
        path: all_reports.md
    - name: Create issue from file
      uses: peter-evans/create-issue-from-file@v2
      with:
        title: Comparison of ${{ steps.baselineprefix.outputs.prefix }} and ${{github.actor}}.github.io/Material.Blazor
        content-filepath: meta_report.md
        labels: report, automated issue
        token: ${{secrets.GH_PAT}}

