name: GithubActionsWIP

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

env:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  outputDocFx: ${{github.workspace}}\siteDocFx
  outputMB: ${{github.workspace}}\siteMB
  outputWeb: ${{github.workspace}}\siteWeb
  projectMB: 'Material.Blazor/Material.Blazor.csproj'
  projectTest: 'Material.Blazor.Test/Material.Blazor.Test.csproj'
  projectWeb: 'Material.Blazor.Website.WebAssembly/Material.Blazor.Website.WebAssembly.csproj'

jobs:

############################################################################################################
# BuildMaterialBlazor (1st of 2 jobs), second job publishes to gh-pages
#   Output: Material.Blazor DocFx pages (uploaded as artifacts)
#   Output: Material.Blazor NuGet package (published as CI)
#   Output: Material.Blazor.Website.WebAssembly (uploaded as artifacts)
############################################################################################################
  buildmaterialblazor:

    runs-on: windows-latest

    steps:

    - name: DotNet info
      run: dotnet --info

    - name: Set ciSuffix as env variable
      run: echo "ciSuffix=ci.$(date +'%Y-%m-%d--%H%M')" >> $GITHUB_ENV
      shell: bash

    - name: Echo ciSuffix
      run: echo "CI suffix is $ciSuffix"
      shell: bash

    - name: Get the branch
      id: get_branch
      run: echo ::set-output name=branch::${GITHUB_REF/refs\/heads\//}
      shell: bash

    - name: Get the pullrequest
      id: get_pullrequest
      run: echo ::set-output name=pullrequest::${GITHUB_REF/refs\/pull\//}
      shell: bash

    - name: Get the tag
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      shell: bash

    - name: Show branch name Ꙫ
      run: echo GitHub indicates that this is a branch push request of ${{steps.get_branch.outputs.branch}}
      if: contains(github.ref, 'refs/heads')

    - name: Show PR name Ꙫ
      run: echo GitHub indicates that this is a pull request called ${{steps.get_pullrequest.outputs.pullrequest}}
      if: contains(github.ref, 'refs/pull')

    - name: Show Tag name Ꙫ
      run: echo GitHub indicates that this is a tag creation with ${{steps.get_tag.outputs.tag}}
      if: contains(github.ref, 'refs/tag')

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2

    - name: Run the acceptance tests as the first build action and cancel out the rest if it fails
      run: dotnet test --configuration ${env:buildConfiguration} ${env:projectTest}

    - name: Create documentation 🔧
      run: .\docfx\docfx docfx.json
      env:
        DOCFX_SOURCE_BRANCH_NAME: main

    - name: Upload Documentation Artifacts 🔺 # The project is then uploaded as an artifact named 'siteDocFx'.
      uses: actions/upload-artifact@v1
      with:
        name: siteDocFx
        path: siteDocFx

    - name: Build Website 🔧
      run: dotnet build --configuration ${env:buildConfiguration} --version-suffix ${env:ciSuffix} ${env:projectWeb}

    - name: Publish Website 🔧
      run: dotnet publish --no-build --configuration ${env:buildConfiguration} --output ${env:outputWeb} --version-suffix ${env:ciSuffix} ${env:projectWeb}

    - name: Upload Website Artifacts 🔺 # The website is then uploaded as an artifact named 'siteWeb'.
      uses: actions/upload-artifact@v1
      with:
        name: siteWeb
        path: siteWeb

    - name: Generate the first NuGet package 🔧
      run: dotnet pack --no-build --configuration ${env:buildConfiguration} --output ${env:outputMB} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --version-suffix ${env:ciSuffix} ${env:projectMB}

    - name: Display MaterialBlazor package output Ꙫ
      run: dir ${env:outputMB}

# We'd like to push to a the main repository but now getting errors of authorization

    - name: Upload Package (Main repository) 🚀
      run: nuget push ${env:outputMB}\*.nupkg -Source https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      if: ((github.repository == 'Material-Blazor/Material.Blazor') && (github.event_name == 'push') && false)

# We'd like to push to a forked repository; The push appears to work but the packages are not visible
# Pending a service response we only do the push of the CI build in the Material-Blazor/Material.Blazor repository

    - name: Upload Package (Forked repository) 🚀
      run: nuget push ${env:outputMB}\*.nupkg -Source https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GH_PAT}}
      if: ((github.repository != 'Material-Blazor/Material.Blazor') && (github.event_name == 'push') && false)

############################################################################################################
# deployghpages
############################################################################################################
  deployghpages:
    needs: [buildmaterialblazor]
    if: github.event_name != 'pull_request' # for PRs, we only need to make sure the build works (the job above), we don't need to deploy anything.

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
#      if: (github.repository != 'Material-Blazor/Material.Blazor') && contains(github.ref, 'refs/heads')

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteDocFx

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: siteWeb

    - name: Configure deployment directory structure Ꙫ
      run: mv siteWeb/wwwroot deployroot; mv siteDocFx deployroot/docs

    # this step rewrites the base href when we are in the main repo and about to deploy to the Material.Blazor.Current repo
    - name: Base Href Rewrite 👉
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: 'deployroot/index.html'
        base_href: '/Material.Blazor.Current/'
      if: (github.repository == 'Material-Blazor/Material.Blazor')

    # this step deploys to Material-Blazor/Material.Blazor.Current when we are in the main repo
    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{secrets.GH_PAT}}
        BRANCH: gh-pages
        FOLDER: 'deployroot'
        REPOSITORY_NAME: Material-Blazor/Material.Blazor.Current
      if: (github.repository == 'Material-Blazor/Material.Blazor')

    # this step rewrites the base href when we are NOT in the main repo
    - name: Base Href Rewrite 👉
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: 'deployroot/index.html'
        base_href: '/Material.Blazor/'
      if: (github.repository != 'Material-Blazor/Material.Blazor')

    # this step deploys to the current repo's gh-pages branch when we are NOT in the main repo
    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{secrets.GH_PAT}}
        BRANCH: gh-pages
        FOLDER: 'deployroot'
      if: (github.repository != 'Material-Blazor/Material.Blazor')
