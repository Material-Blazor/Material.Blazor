name: GithubActionsDevelop

on:
  push:
    branches: [ develop ]

  pull_request:
    branches: [ develop ]

env:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug_Server'
  ciSuffix1: CI.${{ github.run_number }}
  ciSuffix: Preview.1.${{ github.run_number }}
  output: ${{ github.workspace }}\package
  project: 'BlazorMdc/BlazorMdc.csproj'

jobs:

  buildanddeploy:

    runs-on: ubuntu-latest

    steps:

    - name: Get the branch
      id: get_branch
      run: echo ::set-output name=branch::${GITHUB_REF/refs\/heads\//}

    - name: Get the pullrequest
      id: get_pullrequest
      run: echo ::set-output name=pullrequest::${GITHUB_REF/refs\/pull\//}

    - name: Get the tag
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

    - name: Show branch name Ꙫ
      run: echo "GitHub indicates that this is a branch push request of ${{steps.get_branch.outputs.branch}}"
      if: contains(github.ref, 'refs/heads')

    - name: Show PR name Ꙫ
      run: echo "GitHub indicates that this is a pull request called ${{steps.get_pullrequest.outputs.pullrequest}}"
      if: contains(github.ref, 'refs/pull')

    - name: Show Tag name Ꙫ
      run: echo "GitHub indicates that this is a tag creation with ${{steps.get_tag.outputs.tag}}"
      if: contains(github.ref, 'refs/tag')


    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2


    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302
        source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'

    - name: Display CI suffix Ꙫ
      run: echo $ciSuffix

#    - name: Generate NuGet package 🔧
#      run: dotnet pack --configuration $buildConfiguration --output $output -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --version-suffix $ciSuffix $project
#      env:
#        NUGET_AUTH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Display package output Ꙫ
      run: pwd; ls -alt
#      run: ls $output

    - name: Display obfuscated secret Ꙫ
      run: echo "The GitHub token is ${{ secrets.GITHUB_TOKEN }}"

    - name: Upload Package 🚀
      run: nuget push output/*.nupkg -Source https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      if: ((github.actor == 'BlazorMdc') && (github.event_name == 'push'))

    - name: Create documentation
      run: .\DocFx\docfx.exe docfx.json
      env:
        DOCFX_SOURCE_BRANCH_NAME: ${{steps.get_branch.outputs.branch}}
      if: contains(github.ref, 'refs/heads')
      shell: pwsh

    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.GH_PAT }}
        BRANCH: gh-pages
        FOLDER: "_site/wwwroot"
      if: (contains(github.ref, 'refs/heads') && (github.actor != 'BlazorMdc'))
