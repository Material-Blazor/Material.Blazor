<div class="mdc-top-app-bar--dense-fixed-adjust" style="width: @Width;">
    <div class="mdc-layout-grid">
        <div class="mdc-layout-grid__inner">
            <div class="mdc-layout-grid__cell--span-12">
                <MBIconButton Icon="close" @onclick="@CloseBlade"/>
            </div>

            <div class="mdc-layout-grid__cell--span-12">
                <h3 class="mdc-typography--headline6">Blade @BladeReference</h3>
            </div>

            @if (BladeReference == BladeSet.BladeReferences[0])
            {
                <div class="mdc-layout-grid__cell--span-12">
                    <p>A simple, mostly empty blade</p>
                </div>
            }
            else if (BladeReference == BladeSet.BladeReferences[1])
            {
                <div class="mdc-layout-grid__cell--span-12">
                    <p>A longer, scrolling blade.</p>
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean sed odio vel nisl feugiat aliquet. Pellentesque id orci fringilla, dignissim sem ac, porta est. Integer semper enim elit. Nunc lacinia lacus non nisl rutrum semper. Suspendisse feugiat eleifend metus, vitae gravida nibh blandit nec. Ut congue pharetra lectus, non placerat dui aliquam molestie. Donec tincidunt eros et elit sollicitudin tempus. Donec vitae vehicula ipsum. Donec eu turpis ut ipsum convallis cursus a et ex. Vivamus eget mauris pretium leo ornare vulputate nec vel dolor. Vestibulum feugiat urna ut faucibus blandit.</p>
                    <p>Morbi nunc elit, viverra vitae pellentesque ac, posuere id urna. Phasellus nec eros at velit ornare luctus quis sit amet velit. Aenean porttitor scelerisque tortor in viverra. Aliquam eget orci id magna pharetra laoreet. Aenean porttitor erat a arcu posuere, sit amet ornare turpis finibus. Cras tempor augue quis nisl commodo commodo et varius velit. Curabitur nec nunc non dolor tempus pellentesque vel vel sapien. Mauris non ante a tellus interdum scelerisque non ac nunc. Nam tellus purus, tempor in elit nec, pharetra rhoncus leo. In aliquet mauris eget leo cursus aliquam.</p>
                    <p>Quisque porttitor congue orci, rutrum porta nunc fringilla sed. Sed in quam lorem. Praesent ullamcorper egestas ultricies. Integer lobortis eros ut erat luctus scelerisque. Mauris mi lacus, accumsan non sagittis ut, sodales ac quam. Mauris vitae mattis ante, id gravida leo. Proin dapibus orci vitae laoreet consectetur. Donec bibendum tempus mi quis iaculis. Sed eu mauris vel mi vulputate molestie et sed nisl. In viverra, risus in condimentum rhoncus, dui nisi elementum leo, non ultricies lorem risus et diam. Fusce molestie ullamcorper ipsum non ullamcorper.</p>
                    <p>Suspendisse quis dignissim dolor. Morbi pulvinar metus in magna commodo ultricies. Sed tristique nisi in sem dapibus venenatis. In hac habitasse platea dictumst. Vivamus ac sem nec neque fermentum pulvinar vitae quis lorem. Aenean id felis a dui interdum dignissim ac sit amet justo. Vivamus a dui porta, blandit urna non, lobortis mauris. Ut laoreet at ex nec blandit.</p>
                    <p>Integer volutpat eleifend tincidunt. Morbi feugiat rhoncus dui, in porta ipsum maximus vel. Vivamus mollis interdum augue, et finibus lacus dictum sit amet. Ut sodales ante mi, ac fermentum lectus faucibus vitae. Proin tristique erat at purus semper, nec condimentum nisi dictum. Nullam lacus libero, mollis at aliquam nec, viverra id augue. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aliquam ac mattis augue. In et erat libero. Nulla molestie dui nec dapibus hendrerit. Etiam sed ornare est, a ultricies lectus. Integer accumsan interdum ipsum, non gravida nisl. Nunc gravida mi vitae ultricies sollicitudin.</p>
                    <p>Vestibulum accumsan ac nisl in consequat. In hac habitasse platea dictumst. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse potenti. Praesent semper, sapien eu venenatis sodales, libero ex convallis arcu, quis consectetur ipsum dui eget metus. Praesent posuere velit vel felis cursus placerat. Sed et diam lacus.</p>
                    <p>Pellentesque vitae bibendum tellus, a ultrices eros. Morbi ullamcorper est hendrerit finibus feugiat. Suspendisse potenti. Nulla eu dignissim ante. Vestibulum sollicitudin sem sit amet odio aliquet, vitae viverra quam tincidunt. Morbi sodales sem quis nunc imperdiet semper. Donec vel mauris tortor. Sed ornare tempus urna ac auctor. Aenean id sollicitudin elit, sed consequat nulla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Praesent diam justo, placerat pretium est ultricies, elementum dictum est. Donec ullamcorper varius dignissim. Quisque in elit nisl. Nunc sit amet metus ante. Proin placerat consectetur est, ullamcorper rutrum nisi semper nec. Donec mollis fermentum laoreet.</p>
                </div>
            }
            else
            {
                <div class="mdc-layout-grid__cell--span-12">
                    <p>A form</p>
                </div>

                <div class="mdc-layout-grid__cell--span-12">
                    <EditForm Model="@Model">
                        <DataAnnotationsValidator />

                        <div class="mdc-layout-grid__inner">
                            <div class="mdc-layout-grid__cell--span-12" style="margin-top: 6px;">
                                <MBTextField @bind-Value="@Model.Text"
                                             style="width: 100%"
                                             Density="@MBDensity.Minus4"
                                             Label="Text Field"
                                             TextInputStyle="@MBTextInputStyle.Outlined"
                                             ValidationMessageFor="@(() => Model.Text)" />
                            </div>
                            <div class="mdc-layout-grid__cell--span-12">
                                <MBTextArea @bind-Value="@Model.Area"
                                            style="width: 100%"
                                            Density="@MBDensity.Minus4"
                                            Label="Text Area"
                                            TextInputStyle="@MBTextInputStyle.Outlined"
                                            HelperText="Min 20 Characters"
                                            HelperTextPersistent="true"
                                            ValidationMessageFor="@(() => Model.Area)" />
                            </div>
                            <div class="mdc-layout-grid__cell--span-12">
                                <MBAutocompleteTextField @bind-Value="@Model.Autocomplete"
                                                         style="width: 100%"
                                                         Density="@MBDensity.Minus4"
                                                         Label="Autocomplete Text Field"
                                                         SelectItems="@Fruits"
                                                         TextInputStyle="@MBTextInputStyle.Outlined"
                                                         ValidationMessageFor="@(() => Model.Autocomplete)" />
                            </div>
                            <div class="mdc-layout-grid__cell--span-12">
                                <MBNumericDoubleField @bind-Value="@Model.NumericDouble"
                                                      style="width: 100%"
                                                      Density="@MBDensity.Minus4"
                                                      Label="Numeric Double"
                                                      NumericFormat="N2"
                                                      DecimalPlaces="2"
                                                      TextInputStyle="@MBTextInputStyle.Outlined"
                                                      ValidationMessageFor="@(() => Model.NumericDouble)" />
                            </div>
                            <div class="mdc-layout-grid__cell--span-12">
                                <MBNumericIntField @bind-Value="@Model.NumericInt"
                                                   style="width: 100%"
                                                   Density="@MBDensity.Minus4"
                                                   Label="Numeric Int"
                                                   NumericFormat="N0"
                                                   TextInputStyle="@MBTextInputStyle.Outlined"
                                                   ValidationMessageFor="@(() => Model.NumericInt)" />
                            </div>
                            <div class="mdc-layout-grid__cell--span-12" style="text-align: right;">
                                <MBButton style="margin: 0.75em 0.25em 0.25em 0.25em;"
                                          type="submit"
                                          Label="submit" />
                                <MBButton style="margin: 0.75em 0.25em 0.25em 0.25em;"
                                          Label="cancel" />
                            </div>
                        </div>
                    </EditForm>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [CascadingParameter] private MBBladeSet Blades { get; set; }

    [Parameter] public string BladeReference { get; set; }


    private FormValidation.FormModel Model { get; set; } = new();


    public string[] Fruits = { "Avocado", "Banana", "Blackberry", "Blueberry", "Cantaloupe", "Cherry", "Clementine", "Dragonfruit", "Fig", "Grape", "Guava", "Honeydew", "Huckleberry", "Jujube", "Kiwi", "Kumquat", "Lime", "Nectarine", "Orange", "Papaya", "Passion Fruit", "Pineapple", "Plum", "Pomegranate", "Raspberry", "Satsuma", "Strawberry", "Tangerine", "Tomato", "Watermelon" };


    private string Width
    {
        get
        {
            if (BladeReference == BladeSet.BladeReferences[1])
            {
                return "450px";
            }
            else
            {
                return "333px";
            }
        }
    }


    private void CloseBlade()
    {
        Blades.RemoveBlade(BladeReference);
        StateHasChanged();
    }
}
