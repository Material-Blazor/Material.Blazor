@page "/numericintfield"

@inject IMBToastService ToastService

@using System.Runtime.InteropServices


<DemonstrationPage ComponentName="NumericIntField"
                   DemoComponent="@this"
                   MinDensity="MBDensity.Minus4"
                   RequiresDisableSelection="true"
                   Title="Numeric Int Field Demonstration">
    <Description>
        <p>
            Shows numeric int text field, a Plus component.
            Each of these can display as Filled or Outlined and with
            the full variety of icon foundries. These are used across the page but it we don't attempt to show each variant everywhere - see the Text Field demo for this.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Standard Formatted Numerics
                    </h2>

                    <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                        A range of numeric integer fields using formats for non focused input.
                    </h3>

                    <p>
                        <MBNumericIntField @bind-Value="@Integer"
                                           Label="Integer"
                                           NumericFormat="N0"
                                           TextInputStyle="MBTextInputStyle.Outlined" />
                    </p>
                </Primary>
            </MBCard>
        </div>



        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Helper Text
                    </h2>

                    <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Shows persistent and non-persistent helper text.
                    </h3>

                    <p>
                        <MBNumericIntField @bind-Value="@PopupHelperText"
                                           Label="Popup Helper Text"
                                           NumericFormat="N0"
                                           HelperText="Some helper text that pops up" />
                    </p>

                    <p>
                        <MBNumericIntField @bind-Value="@PersistentHelperText"
                                           Label="Persistent Helper Text"
                                           NumericFormat="N0"
                                           HelperText="Some persistent helper text"
                                           HelperTextPersistent="true" />
                    </p>
                </Primary>
            </MBCard>
        </div>
    </PageContent>
</DemonstrationPage>


@code {
    private int _integer;
    private int Integer
    {
        get => _integer;
        set
        {
            _integer = value;

            ToastService.ShowToast(heading: "Integer numeric", message: $"Value: '{_integer.ToString("N0")}'", level: MBToastLevel.Success, showIcon: false);
        }
    }


    private int _popupHelperText;
    private int PopupHelperText
    {
        get => _popupHelperText;
        set
        {
            _popupHelperText = value;

            ToastService.ShowToast(heading: "Popup Helper Text", message: $"Value: '{_popupHelperText}'", level: MBToastLevel.Success, showIcon: false);
        }
    }


    private int _persistentHelperText;
    private int PersistentHelperText
    {
        get => _persistentHelperText;
        set
        {
            _persistentHelperText = value;

            ToastService.ShowToast(heading: "Persistent Helper Text", message: $"Value: '{_persistentHelperText}'", level: MBToastLevel.Success, showIcon: false);
        }
    }
}