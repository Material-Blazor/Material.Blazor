@page "/drawer"

@inject IMBSnackbarService SnackbarService



<DemonstrationPage ComponentName="Drawer"
                   DemoComponent="@this"
                   Title="Drawer">
    <Description>
        <p>
            Anchor component.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Drawer
                    </h2>

                    <p>
                        The Drawer is a visual component. You encapsulate the content that you wish to show and hide as a group.
                        Typically this is a menu, but any components can be included.
                    </p>
                    <p>
                        This website uses the Drawer in its MainLayout.razor and can be observed as the menu when invoked.
                    </p>
                </Primary>
            </MBCard>
        </div>
    </PageContent>
</DemonstrationPage>



@code {
    private bool _toggleState;
    private bool ToggleState
    {
        get => _toggleState;
        set
        {
            _toggleState = value;

            SnackbarService.ShowSnackbar(additionalClass: "snackbar-success", message: "Toggle Icon Button Clicked " + $"Value: {_toggleState} / {(_toggleState ? "Dog" : "Cat")}");
        }
    }



    private bool _toggleTwoWayBindingState;
    private bool ToggleTwoWayBindingState
    {
        get => _toggleTwoWayBindingState;
        set
        {
            _toggleTwoWayBindingState = value;

            SnackbarService.ShowSnackbar(additionalClass: "snackbar-success", message: "Toggle Icon Button Clicked " + $"Two way binding Value: {_toggleTwoWayBindingState}");
        }
    }



    private void ButtonClick(string notification)
    {
        SnackbarService.ShowSnackbar(additionalClass: "snackbar-success", message: "Button Clicked" + notification);
    }
}