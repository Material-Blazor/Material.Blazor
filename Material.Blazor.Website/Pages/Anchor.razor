@page "/anchor"

@inject IMBToastService ToastService



<DemonstrationPage ComponentName="Anchor"
                   DemoComponent="@this"
                   MinDensity="MBDensity.Default"
                   RequiresDisableSelection="false"
                   Title="Anchor Demonstration">
    <Description>
        <p>
            Anchor component.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Anchor
                    </h2>

                    <p>
                        The Anchor is a non-visual component. If you use Snackbar, Toast and/or Tooltip components this
                        must be placed in your app.razor or the layout page used for all application components
                        that use snackbars, toasts and tooltips.
                    </p>
                </Primary>
            </MBCard>
        </div>
    </PageContent>
</DemonstrationPage>



@code {
    private bool _toggleState;
    private bool ToggleState
    {
        get => _toggleState;
        set
        {
            _toggleState = value;

            ToastService.ShowToast(heading: "Toggle Icon Button Clicked", message: $"Value: {_toggleState} / {(_toggleState ? "Dog" : "Cat")}", level: MBToastLevel.Success, showIcon: false);
        }
    }



    private bool _toggleTwoWayBindingState;
    private bool ToggleTwoWayBindingState
    {
        get => _toggleTwoWayBindingState;
        set
        {
            _toggleTwoWayBindingState = value;

            ToastService.ShowToast(heading: "Toggle Icon Button Clicked", message: $"Two way binding Value: {_toggleTwoWayBindingState}", level: MBToastLevel.Success, showIcon: false);
        }
    }



    private void ButtonClick(string notification)
    {
        ToastService.ShowToast(heading: "Button Clicked", message: notification, level: MBToastLevel.Success, showIcon: false);
    }
}