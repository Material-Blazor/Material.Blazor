<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>

    <Configurations>Debug;Release</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>Logging</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DefineConstants>NoLogging</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <SupportedPlatform Include="browser" />
  </ItemGroup>
  
  <PropertyGroup>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Properties\**" />
    <Content Remove="Properties\**" />
    <EmbeddedResource Remove="Properties\**" />
    <None Remove="Properties\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="package.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="package.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="5.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.0" />
    <PackageReference Include="System.Net.Http.Json" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Material.Blazor\Material.Blazor.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\css\" />
    <Folder Include="wwwroot\videos\" />
  </ItemGroup>

  <ItemGroup>
    <InputStaticAssetsStyles Include="**\*.scss;" Exclude="bin\**\*;node_modules\**\*;obj\**\*" />
    <OutputStaticAssetsStyles Include="wwwroot\css\asymmetric-theme.min.css;wwwroot\css\dark-square-theme.min.css;wwwroot\css\light-square-theme.min.css;wwwroot\css\material-default-theme.min.css;wwwroot\css\rounded-theme.min.css;" />
  </ItemGroup>

  <Target Name="CheckIfNpmExists" Inputs="@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent">
    <Exec Command="echo ***** npm install" />
    <Exec Command="npm install" ContinueOnError="true" StandardOutputImportance="low" StandardErrorImportance="low" LogStandardErrorAsError="false" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="NpmReturnCode" />
    </Exec>
    <Exec Command="echo ***** 'npm install' return code was $(NpmReturnCode) (0 indicates npm is available)" />
  </Target>

  <Target Name="BuildStyles" Inputs="@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
    <Exec Command="echo ***** mkdir wwwroot and wwwroot\css" />
    <Exec Command="mkdir wwwroot" IgnoreExitCode="true" />
    <Exec Command="mkdir wwwroot\css" IgnoreExitCode="true" />

    <!-- Don't build unminified themes -->
    <Exec Command="echo ***** build material default theme" />
    <Exec Command="npm run build-min-material-default" />

    <Exec Command="echo ***** build light square theme" />
    <Exec Command="npm run build-min-light-square" />

    <Exec Command="echo ***** build dark square theme" />
    <Exec Command="npm run build-min-dark-square" />

    <Exec Command="echo ***** build rounded theme" />
    <Exec Command="npm run build-min-rounded" />

    <Exec Command="echo ***** build asymmetric theme" />
    <Exec Command="npm run build-min-asymmetric" />

  </Target>

</Project>
