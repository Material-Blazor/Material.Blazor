@page "/tabbar"

@inject IMTToastService ToastService


<DemonstrationPage ComponentName="TabBar"
                   Title="Tab Bar Demonstration"
                   DemoComponent="@this"
                   MaterialIOPage="mdc-tab-bar#tab-bar"
                   IsGeneric="true"
                   MinDensity="MTDensity.Minus4">
    <Description>
        <p>
            Demonstrates the core Tab Bar component.
        </p>
    </Description>

    <Controls>
        <p><MTSwitch @bind-Value="@StackIcons" Label="Stack Icons" /></p>
    </Controls>

    <PageContent>
        <div @key="@StackIcons" class="mdc-layout-grid__cell--span-12">
            <div class="mdc-layout-grid__inner">

                <div class="mdc-layout-grid__cell--span-12">
                    <MTCard AutoStyled="true">
                        <Primary>
                            <h2 class="bmdc-card__title mdc-typography mdc-typography--headline6">
                                Regular Tab Bar
                            </h2>

                            <h3 class="bmdc-card__subtitle mdc-typography mdc-typography--subtitle2">
                                Demonstrates a regular tab bar for which you need to control tabbed content. This example uses the Font Awesome foundry for icons.
                            </h3>

                            <p style="margin-bottom: 2em;"><MTButton Label="Go to Dog" @onclick="@DogButtonClick" /></p>

                            <p>
                                <MTTabBar @bind-Value="@TabIndex"
                                          Items="@TabLabels"
                                          Context="item"
                                          StackIcons="@StackIcons">

                                    <Icon>
                                        @{ var name = "fa-" + item; }
                                        <MTIcon IconName="@name" IconFoundry="MTIconHelper.FAFoundry()" />
                                    </Icon>

                                    <Label>
                                        @item
                                    </Label>
                                </MTTabBar>
                            </p>
                        </Primary>
                    </MTCard>
                </div>

            </div>
        </div>
    </PageContent>
</DemonstrationPage>


@code {
    private int _tabIndex = 0;
    private int TabIndex
    {
        get => _tabIndex;
        set
        {
            if (value != _tabIndex)
            {
                _tabIndex = value;

                ToastService.ShowToast(heading: "Tab Clicked", message: $"Item {_tabIndex} / {TabLabels[_tabIndex]}", level: MTToastLevel.Success, showIcon: false);
            }
        }
    }


    private bool StackIcons { get; set; } = false;


    private string[] TabLabels { get; set; } = { "cat", "dog", "horse-head", "dove", "hippo", "kiwi-bird", "dragon" };

    private void DogButtonClick() => TabIndex = 1;
}