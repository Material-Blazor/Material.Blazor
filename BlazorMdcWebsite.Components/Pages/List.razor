@page "/list"

@inject IMTToastService ToastService


<style>
    .overflow-auto {
        overflow: auto;
        width: 100%;
    }

    .my-list {
        min-width: 100%;
    }
</style>



<DemonstrationPageLayout ComponentNames=@(new string[] { "List" })
                         Title="List Demonstration"
                         DemoComponent="@this"
                         MaterialIOPages="@(new string[] { "mdc-list#lists" })"
                         MinDensity="MTDensity.Minus4"
                         RequiresDisableSelection="true"
                         IsGeneric="@(new bool[] { true })">
    <Description>
        <p>
            Demonstrates a data table. Blazor MDC presently only implements "Standard" data tables without row interaction.
        </p>
    </Description>

    <Controls>
        <p>
            <MTRadioButtonGroup @bind-Value="@ListType"
                                Items="@ListTypes"
                                EnableTouchWrapper="true" />
        </p>

        <p><MTSwitch @bind-Value="@HideLineTwo" Label="Hide line two" /></p>

        <p><MTSwitch @bind-Value="@HideLineThree" Label="Hide line three" /></p>

        <p><MTSwitch @bind-Value="@KeyboardInteractions" Label="Allow keyboard interactions" /></p>

        <p><MTSwitch @bind-Value="@Ripple" Label="Apply ripple" /></p>

    </Controls>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-12">
            <MTCard AutoStyled="true">
                <Primary>
                    <h2 class="bmdc-card__title mdc-typography mdc-typography--headline6">
                        Single Line List
                    </h2>

                    <h3 class="bmdc-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Single line lists are the only variant capable of responding to the density subsystem (radio buttons above).
                    </h3>

                    <div class="overflow-auto">
                        <p>
                            <MTList Items="@SingleLineProducts"
                                    Context="product"
                                    ShowSeparators="true"
                                    KeyboardInteractions="@KeyboardInteractions"
                                    Ripple="@Ripple"
                                    ListType="@ListType"
                                    HideLineTwo="@HideLineTwo"
                                    HideLineThree="@HideLineThree"
                                    OnClick="OnSingleLineClick"
                                    ListStyle="MTListStyle.Outlined">

                                <Icon><MTIcon IconName="local_grocery_store" /></Icon>
                                <Title>@product.DisplayName</Title>
                                <Actions>
                                    <div style="width: 10rem">
                                        <MTSwitch @bind-Value="@product.IsInStock"
                                                  Label="@(product.IsInStock ? "In stock" : "Out of stock")" />
                                    </div>
                                </Actions>
                            </MTList>
                        </p>
                    </div>
                </Primary>
            </MTCard>
        </div>


        <div class="mdc-layout-grid__cell--span-12">
            <MTCard AutoStyled="true">
                <Primary>
                    <h2 class="bmdc-card__title mdc-typography mdc-typography--headline6">
                        Two Line List
                    </h2>

                    <h3 class="bmdc-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Two line lists are a standard Material Theme component.
                    </h3>

                    <div class="overflow-auto">
                        <p>
                            <MTList Items="@TwoLineProducts"
                                    Context="product"
                                    ShowSeparators="true"
                                    KeyboardInteractions="@KeyboardInteractions"
                                    Ripple="@Ripple"
                                    ListType="@ListType"
                                    HideLineTwo="@HideLineTwo"
                                    HideLineThree="@HideLineThree"
                                    OnClick="OnTwoLineClick"
                                    ListStyle="MTListStyle.Outlined">

                                <Icon><MTIcon IconName="local_grocery_store" /></Icon>
                                <Title>@product.DisplayName</Title>
                                <LineTwo>@product.LineTwo</LineTwo>
                                <Actions>
                                    <div style="width: 10rem">
                                        <MTSwitch @bind-Value="@product.IsInStock"
                                                  Label="@(product.IsInStock ? "In stock" : "Out of stock")" />
                                    </div>
                                </Actions>
                            </MTList>
                        </p>
                    </div>
                </Primary>
            </MTCard>
        </div>


        <div class="mdc-layout-grid__cell--span-12">
            <MTCard AutoStyled="true">
                <Primary>
                    <h2 class="bmdc-card__title mdc-typography mdc-typography--headline6">
                        Three Line List
                    </h2>

                    <h3 class="bmdc-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Three line lists are in the material theme specification but not implemented by material components web. This is a Blazor MDC interpretation of three line lists.
                        There is some improvement to be made to dense forms of the three line list.
                    </h3>

                    <div class="overflow-auto">
                        <p>
                            <MTList Items="@ThreeLineProducts"
                                    Context="product"
                                    ShowSeparators="true"
                                    KeyboardInteractions="@KeyboardInteractions"
                                    Ripple="@Ripple"
                                    ListType="@ListType"
                                    HideLineTwo="@HideLineTwo"
                                    HideLineThree="@HideLineThree"
                                    OnClick="OnThreeLineClick"
                                    ListStyle="MTListStyle.Outlined">

                                <Icon><MTIcon IconName="local_grocery_store" /></Icon>
                                <Title>@product.DisplayName</Title>
                                <LineTwo>@product.LineTwo</LineTwo>
                                <LineThree>@product.LineThree</LineThree>
                                <Actions>
                                    <div style="width: 10rem">
                                        <MTSwitch @bind-Value="@product.IsInStock"
                                                  Label="@(product.IsInStock ? "In stock" : "Out of stock")" />
                                    </div>
                                </Actions>
                            </MTList>
                        </p>
                    </div>
                </Primary>
            </MTCard>
        </div>
    </PageContent>
</DemonstrationPageLayout>



@code {
    private IEnumerable<MTListElement<MTListType>> ListTypes => from t in (MTListType[])Enum.GetValues(typeof(MTListType))
                                                                select new MTListElement<MTListType>
                                                                {
                                                                    SelectedValue = t,
                                                                    Label = t.ToString(),
                                                                    Disabled = false
                                                                };



    private IEnumerable<Product> SingleLineProducts = new System.Collections.Generic.List<Product>
    {
        new Product { ProductId = 1, DisplayName = "Curly-wurly straw", LineTwo = "Amaze your friends with this cheap plastic tube", LineThree = "Line three", IsInStock = true },
        new Product { ProductId = 2, DisplayName = "Pepsi Connoisseur (12mo subscription)", LineTwo = "Covers all developments in the world of Pepsi™", LineThree = "Line three", IsInStock = false },
        new Product { ProductId = 3, DisplayName = "Recarbonator Pro", LineTwo = "Revitalize your old beverages in just hours", LineThree = "Line three", IsInStock = true },
    };


    private IEnumerable<Product> TwoLineProducts = new System.Collections.Generic.List<Product>
    {
        new Product { ProductId = 1, DisplayName = "Curly-wurly straw", LineTwo = "Amaze your friends with this cheap plastic tube", LineThree = "Line three", IsInStock = true },
        new Product { ProductId = 2, DisplayName = "Pepsi Connoisseur (12mo subscription)", LineTwo = "Covers all developments in the world of Pepsi™", LineThree = "Line three", IsInStock = false },
        new Product { ProductId = 3, DisplayName = "Recarbonator Pro", LineTwo = "Revitalize your old beverages in just hours", LineThree = "Line three", IsInStock = true },
    };


    private IEnumerable<Product> ThreeLineProducts = new System.Collections.Generic.List<Product>
    {
        new Product { ProductId = 1, DisplayName = "Curly-wurly straw", LineTwo = "Amaze your friends with this cheap plastic tube", LineThree = "Line three", IsInStock = true },
        new Product { ProductId = 2, DisplayName = "Pepsi Connoisseur (12mo subscription)", LineTwo = "Covers all developments in the world of Pepsi™", LineThree = "Line three", IsInStock = false },
        new Product { ProductId = 3, DisplayName = "Recarbonator Pro", LineTwo = "Revitalize your old beverages in just hours", LineThree = "Line three", IsInStock = true },
    };


    public class Product
    {
        public int ProductId { get; set; }
        public string DisplayName { get; set; }
        public string LineTwo { get; set; }
        public string LineThree { get; set; }
        public bool IsInStock { get; set; }
    }


    private MTListType ListType { get; set; } = MTListType.Regular;
    private bool HideLineTwo = false;
    private bool HideLineThree = false;
    private bool KeyboardInteractions = true;
    private bool Ripple = true;


    private void OnSingleLineClick(int index)
    {
        ToastService.ShowToast(heading: "Single Line Click", message: $"Line {index} clicked", level: MTToastLevel.Success, showIcon: false);
    }


    private void OnTwoLineClick(int index)
    {
        ToastService.ShowToast(heading: "Two Line Click", message: $"Line {index} clicked", level: MTToastLevel.Success, showIcon: false);
    }


    private void OnThreeLineClick(int index)
    {
        ToastService.ShowToast(heading: "Three Line Click", message: $"Line {index} clicked", level: MTToastLevel.Success, showIcon: false);
    }
}