@page "/textarea"

@inject IMBToastService ToastService


<DemonstrationPage ComponentName="TextArea"
                   Title="Text Area Demonstration"
                   DemoComponent="@this"
                   MaterialIOPage="mdc-textfield#text-field"
                   MinDensity="MBDensity.Minus4"
                   RequiresDisableSelection="true">
    <Description>
        <p>
            Filled and outlined text fields with icon usage, class and style application and finally density.
        </p>
    </Description>

    <PageContent>
        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Default Style
                    </h2>

                    <p><MBTextArea Label="Filled" @bind-Value="@DefaultStyle" Rows="3" class="supplied-test-class" id="supplied-test-id" /></p>
                </Primary>
            </MBCard>
        </div>



        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Filled Style
                    </h2>

                    <p><MBTextArea Label="Filled" @bind-Value="@FilledStyle" Rows="3" TextInputStyle="MBTextInputStyle.Filled" /></p>
                </Primary>
            </MBCard>
        </div>



        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Outlined Style
                    </h2>

                    <p><MBTextArea Label="Filled" @bind-Value="@OutlinedStyle" Rows="3" TextInputStyle="MBTextInputStyle.Outlined" /></p>
                </Primary>
            </MBCard>
        </div>



        <div class="mdc-layout-grid__cell--span-4">
            <MBCard AutoStyled="true">
                <Primary>
                    <h2 class="mb-card__title mdc-typography mdc-typography--headline6">
                        Helper Text
                    </h2>

                    <h3 class="mb-card__subtitle mdc-typography mdc-typography--subtitle2">
                        Shows persistent and non-persistent helper text.
                    </h3>

                    <p><MBTextArea Label="Popup Helper Text" @bind-Value="@PopupHelperText" HelperText="Some helper text that pops up" /></p>
                    <p><MBTextArea Label="Persistent Helper Text" @bind-Value="@PersistentHelperText" HelperText="Some persistent helper text" HelperTextPersistent="true" /></p>
                </Primary>
            </MBCard>
        </div>
    </PageContent>
</DemonstrationPage>


@code {
    private string _defaultStyle;
    private string DefaultStyle
    {
        get => _defaultStyle;
        set
        {
            _defaultStyle = value;

            ToastService.ShowToast(heading: "Default Style", message: $"Value: '{_defaultStyle}'", level: MBToastLevel.Success, showIcon: false);
        }
    }



    private string _filledStyle;
    private string FilledStyle
    {
        get => _filledStyle;
        set
        {
            _filledStyle = value;

            ToastService.ShowToast(heading: "Filled Style", message: $"Value: '{_filledStyle}", level: MBToastLevel.Success, showIcon: false);
        }
    }



    private string _outlinedStyle;
    private string OutlinedStyle
    {
        get => _outlinedStyle;
        set
        {
            _outlinedStyle = value;

            ToastService.ShowToast(heading: "Outlined Style", message: $"Value: '{_outlinedStyle}", level: MBToastLevel.Success, showIcon: false);
        }
    }


    private string _popupHelperText;
    private string PopupHelperText
    {
        get => _popupHelperText;
        set
        {
            _popupHelperText = value;

            ToastService.ShowToast(heading: "Popup Helper Text", message: $"Value: '{_popupHelperText}'", level: MBToastLevel.Success, showIcon: false);
        }
    }


    private string _persistentHelperText;
    private string PersistentHelperText
    {
        get => _persistentHelperText;
        set
        {
            _persistentHelperText = value;

            ToastService.ShowToast(heading: "Persistent Helper Text", message: $"Value: '{_persistentHelperText}'", level: MBToastLevel.Success, showIcon: false);
        }
    }
}