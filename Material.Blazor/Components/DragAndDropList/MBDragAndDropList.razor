@namespace Material.Blazor
@inherits InputComponent<List<TItem>>
@typeparam TItem


<div @ref="@ElementReference"
     class="mb-drag-and-drop-list @ActiveConditionalClasses @(@class)"
     style="@style"
     id="@id"
     @attributes="@AttributesToSplat()">

    @{
        Console.WriteLine($"Parent: {IsDragging}");
    }
    <InternalDragAndDropSpacer Index="0" ParentId="_id" DropNotifier="@ReOrderItems" />

    @foreach (var (index, item) in ItemDict)
    {
        <MBCard @key="@KeyGenerator(item)" CardStyle="@MBCardStyle.Outlined">
            <Primary>
                <InternalDragAndDropItem Index="@index" DragStartNotifier="SetDraggedItemIndex" DragEndNotifier="ClearDraggedItemIndex">
                    @Content(item)
                </InternalDragAndDropItem>
            </Primary>
        </MBCard>

        <InternalDragAndDropSpacer Index="@(index + 1)" IsDragging="@IsDragging" DropNotifier="@ReOrderItems" />
    }
</div>