@namespace Material.Blazor
@typeparam TItem
@inherits ComponentFoundation


<div class="@ActiveConditionalClasses @(@class)"
     style="@style"
     id="@id"
     @attributes="@AttributesToSplat()">

    <div class="@ContentClass @ListTemplateClass">
        @ListTemplate(
            @<text>
                @foreach (TItem item in CurrentPage)
                {
                    @ItemTemplate(item)
                }
            </text>)
    </div>

    <div class="@PaginatorClass">
        <MBPaginator @bind-ItemsPerPage="@BackingItemsPerPage"
                     @bind-PageNumber="@BackingPageNumber"
                     ItemCount="@Data.Count()"
                     ItemsPerPageSelection="@ItemsPerPageSelection" />
    </div>
</div>


@code {
    // Would like to use <inheritdoc/> however DocFX cannot resolve to references outside Material.Blazor
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        KeyGenerator = GetKeysFunc ?? delegate (TItem item) { return item; };

        if (ItemTemplate == null)
        {
            ItemTemplate = (item) => @<li @key="@KeyGenerator(item)">@item.ToString()</li>;
        }

        if (ListTemplate == null)
        {
            ListTemplate = (childContent) => @<ul>@childContent</ul>;
        }
    }
}