@namespace Material.Blazor
@inherits ComponentFoundation

@if (Type == MBFloatingActionButtonType.Mini)
{
    <MBTouchTargetWrapper ApplyTouchTargetWrapper="AppliedTouchTarget">
        <button @ref="@ElementReference"
                class="mdc-fab @ActiveConditionalClasses @(@class)"
                style="@style"
                id="@id"
                @attributes="@AttributesToSplat()">

            <div class="mdc-fab__ripple"></div>
            <MBIcon class="mdc-fab__icon"
                    IconFoundry="@IconFoundry"
                    IconName="@Icon" />
            <div class="mdc-fab__touch"></div>
        </button>
    </MBTouchTargetWrapper>
}
else
{
    <button @ref="@ElementReference"
            class="mdc-fab @ActiveConditionalClasses @(@class)"
            style="@style"
            id="@id"
            @attributes="@AttributesToSplat()">

        <div class="mdc-fab__ripple"></div>

        @if (Type == MBFloatingActionButtonType.Extended && IconTrailsLabel)
        {
            <span class="mdc-fab__label">@Label</span>
        }

        <MBIcon class="mdc-fab__icon" IconName="@Icon" IconFoundry="@IconFoundry" />

        @if (Type == MBFloatingActionButtonType.Extended && !IconTrailsLabel)
        {
            <span class="mdc-fab__label">@Label</span>
        }
    </button>
}