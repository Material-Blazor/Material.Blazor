@namespace Material.Blazor
@inherits ComponentFoundation
@typeparam TItem


<div @ref="@ElementReference"
     @attributes="@AttributesToSplat()">

    <div class="mdc-data-table__table-container">
        <table class="mdc-data-table__table">
            @if (TableHeader != null)
            {
                <thead>
                    <tr class="mdc-data-table__header-row">
                        @TableHeader
                    </tr>
                </thead>
            }

            <tbody class="mdc-data-table__content">
                @if ((TableRow != null) && (Items != null))
                {
                    @foreach (var item in Items)
                    {
                        <tr @key="@KeyGenerator(item)" class="mdc-data-table__row">
                            @TableRow(item)
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @if (HasProgressBar)
    {
        <div class="mdc-data-table__progress-indicator">
            <div class="mdc-data-table__scrim"></div>
            <div class="mdc-linear-progress mdc-linear-progress--indeterminate mdc-data-table__linear-progress" role="progressbar" aria-label="Data is being loaded...">
                <div class="mdc-linear-progress__buffer">
                    <div class="mdc-linear-progress__buffer-bar"></div>
                    <div class="mdc-linear-progress__buffer-dots"></div>
                </div>
                <div class="mdc-linear-progress__bar mdc-linear-progress__primary-bar">
                    <span class="mdc-linear-progress__bar-inner"></span>
                </div>
                <div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar">
                    <span class="mdc-linear-progress__bar-inner"></span>
                </div>
            </div>
        </div>
    }

    @if (Paginator != null)
    {
        <CascadingValue Name="@DataTableCascadingValue" Value="@DataTableReference" IsFixed="true">
            @Paginator
        </CascadingValue>
    }

</div>