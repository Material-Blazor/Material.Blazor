@namespace Material.Blazor.Internal

@inherits InputComponent<DateTime>

<div class="mdc-typography--body2 mb-dp-container">

    <ul class="mdc-list mb-dp-list">
        <li class="mdc-list-item mdc-list-item--selected mb-dp-list-item"
            data-value="@ValueText"
            aria-selected="true"
            role="option">
            <span class="mdc-list-item__ripple"></span>
            <span @ref="@ListItemReference" class="mdc-list-item__text mb-dp-list-item__text">@ValueText</span>
        </li>
    </ul>

    <div class="mb-dp-menu">
        <div class="mb-dp-menu__left">
            <span>@MonthText</span>
            <MBIconButtonToggle @bind-Value="@ShowYearPad"
                                class="mb-dp-menu__icon-button"
                                IconOn="arrow_drop_up"
                                IconOff="arrow_drop_down"
                                IconFoundry="@foundry"
                                type="button"/>
        </div>

        @if (!ShowYearPad)
        {
            <div class="mb-dp-menu__right">
                <MBIconButton class="mb-dp-menu__icon-button"
                              Disabled="@PreviousMonthDisabled"
                              Icon="chevron_left"
                              IconFoundry="@foundry"
                              @onclick="@OnPreviousMonthClick"
                              type="button"/>

                <MBIconButton class="mb-dp-menu__icon-button spaced"
                              Icon="undo"
                              IconFoundry="@foundry"
                              @onclick="@OnShowCurrentDateClick" 
                              type="button"/>

                <MBIconButton class="mb-dp-menu__icon-button spaced"
                              Disabled="@NextMonthDisabled"
                              Icon="chevron_right"
                              IconFoundry="@foundry"
                              @onclick="@OnNextMonthClick" 
                              type="button"/>
            </div>
        }
    </div>

    @if (ShowYearPad)
    {
        <div class="mb-dp-year-pad">
            <Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize Items="YearsInGroupsOfFour" OverscanCount="10" ItemSize="36">
                <ItemContent Context="group">
                    @foreach (var year in group)
                    {
                        <InternalDatePickerYearButton CurrentYear="@StartOfDisplayMonth.Year"
                                                      CurrentYearId="@currentYearId"
                                                      DisplayYear="@year"
                                                      @key="@year"
                                                      MaxDate="@MaxDate"
                                                      MinDate="@MinDate"
                                                      OnItemClickAsync="@OnYearItemClick"
                                                      type="button" />
                    }
                </ItemContent>
            </Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize>
        </div>
    }
    else
    {
        <div class="mb-dp-day-pad">
            <div class="mb-dp-day-pad__weekdays-block">
                @foreach (var d in DaysOfWeek)
                {
                    <span class="mdc-theme--text-disabled-on-background mb-dp-day-pad__weekday">@d</span>
                }
            </div>
            <div class="mdc-list mb-dp-day-pad__days-block">
                @foreach (var date in Dates)
                {
                    <InternalDatePickerDayButton CurrentDate="@Value"
                                                 DateIsSelectable="@DateIsSelectable"
                                                 DateSelectionCriteria="@DateSelectionCriteria"
                                                 DisplayDate="@date"
                                                 @key="@date"
                                                 MaxDate="@MaxDate"
                                                 MinDate="@MinDate"
                                                 OnItemClickAsync="@OnDayItemClickAsync"
                                                 StartOfDisplayMonth="@StartOfDisplayMonth" 
                                                 type="button"/>
                }
            </div>
        </div>
    }
</div>