<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<!--<TargetFrameworks>net6.0;net7.0</TargetFrameworks>-->
		<TargetFrameworks>net6.0</TargetFrameworks>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<VersionPrefix>3.0.0</VersionPrefix>
		<VersionSuffix>aaa1</VersionSuffix>
		<PackageLicenseFile></PackageLicenseFile>
		<Authors>Simon Ziegler of Dioptra and Mark Stega of Optimium Health</Authors>
		<Company>Material.Blazor</Company>
		<Description>A lightweight Material Theme component library for Blazor. Intended to adhere rigorously to Material Theme guidelines in https://material.io. API and other documentation can be found at https://material-blazor.com/docs.</Description>
		<RepositoryUrl>https://github.com/Material-Blazor/Material.Blazor</RepositoryUrl>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageReleaseNotes></PackageReleaseNotes>
		<NeutralLanguage>en</NeutralLanguage>
		<Copyright>Dioptra and Optimium Health</Copyright>
		<PackageProjectUrl>https://material-blazor.com</PackageProjectUrl>
		<Product>Material.Blazor</Product>
		<UserSecretsId>d7509b6c-bc5c-4a56-a750-09c8ae4aeb85</UserSecretsId>
		<Configurations>Debug;Release</Configurations>
	</PropertyGroup>

	<PropertyGroup>
		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
	</PropertyGroup>

	<PropertyGroup>
		<EmitCompilerGeneratedFiles>false</EmitCompilerGeneratedFiles>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="\" />
	</ItemGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<WarningLevel>5</WarningLevel>
	</PropertyGroup>

	<ItemGroup>
		<!--Keep these four Removes-->
		<Content Remove="package-lock.json" />
		<Content Remove="package.json" />
		<Content Remove="tsconfig.json" />
		<Content Remove="wwwroot\intermediate.js" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components" Version="6.0.7" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.7" />
		<PackageReference Include="Microsoft.Extensions.Logging" Version="6.0.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.1" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net7.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components" Version="7.0.0-preview.3.*" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="7.0.0-preview.3.*" />
		<PackageReference Include="Microsoft.Extensions.Logging" Version="7.0.0-preview.3.*" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.0-preview.3.*" />
	</ItemGroup>

	<ItemGroup>
		<None Include="package-lock.json" />
		<None Include="package.json" />
		<None Include="tsconfig.json" />
	</ItemGroup>

	<ItemGroup>
		<None Update="Scripts\material.blazor.ts">
			<SubType>Code</SubType>
		</None>
	</ItemGroup>

	<ItemGroup>
		<InputStaticAssetsScripts Include="components\**\*.ts;scripts\**\*.ts" />
		<OutputStaticAssetsScripts Include="wwwroot\material.blazor.js;wwwroot\material.blazor.min.js" />
		<!--Keep this Removes-->
		<Content Remove="@(OutputStaticAssetsScripts)" />
		<Content Include="@(OutputStaticAssetsScripts)" />
	</ItemGroup>

	<ItemGroup>
		<InputStaticAssetsStyles Include="components\**\*.scss;styles\**\*.scss;" />
		<OutputStaticAssetsStyles Include="wwwroot\material.blazor.css;wwwroot\material.blazor.min.css;wwwroot\material-components-web.css;wwwroot\material-components-web.min.css" />
		<!--Keep this Removes-->
		<Content Remove="@(OutputStaticAssetsStyles)" />
		<Content Include="@(OutputStaticAssetsStyles)" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="wwwroot\" />
		<Folder Include="Components\Carousel\" />
	</ItemGroup>

	<Target Name="CheckIfNpmExists" BeforeTargets="PreBuildEvent">
		<Exec Command="npm --version" ContinueOnError="true" StandardOutputImportance="low" StandardErrorImportance="low" LogStandardErrorAsError="false" IgnoreExitCode="true">
			<Output TaskParameter="ExitCode" PropertyName="NpmReturnCode" />
		</Exec>
	</Target>

	<Target Name="ErrorOutput" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' != '0' ">
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="***** 'npm --version' return code was $(NpmReturnCode)" />
		<Message Importance="high" Text="CSS and JS not built due to the lack of a proper development environment" />
		<Message Importance="high" Text="See https://material-blazor.com/docs/articles/DevelopmentEnvironment.html" />
		<Message Importance="high" Text="If the return code is 1, check package.json and package-lock.json" />
		<Message Importance="high" Text="If the return code is 9009, npm is not present" />
		<Message Importance="high" Text="For other non-zero return codes, check npm documentation" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
	</Target>

	<ItemGroup>
		<UpToDateCheckInput Include="@(InputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckInput Include="@(InputStaticAssetsStyles)" Set="Styles" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsStyles)" Set="Styles" />
	</ItemGroup>

	<Target Name="BuildScripts" Inputs="@(InputStaticAssetsScripts)" Outputs="@(OutputStaticAssetsScripts)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<Message Importance="high" Text="***** MakeDir wwwroot (M.B Scripts)" />
		<MakeDir Directories="wwwroot" />

		<Message Importance="high" Text="***** npm install" />
		<Exec Command="npm install" />

		<!-- The files that were deleted were incorrectly shipped with an earlier version of material-components-web (12.0.0?). Deletion no longer required -->
		<!--<Delete Files="node_modules\@material\segmented-button\segment\adapter.ts;node_modules\@material\segmented-button\segment\component.ts;node_modules\@material\segmented-button\segment\constants.ts;node_modules\@material\segmented-button\segment\foundation.ts;node_modules\@material\segmented-button\segment\index.ts" />
		<Delete Files="node_modules\@material\segmented-button\segmented-button\adapter.ts;node_modules\@material\segmented-button\segmented-button\component.ts;node_modules\@material\segmented-button\segmented-button\constants.ts;node_modules\@material\segmented-button\segmented-button\foundation.ts;node_modules\@material\segmented-button\segmented-button\index.ts" />
		<Delete Files="node_modules\@material\tooltip\component.ts;node_modules\@material\tooltip\constants.ts;node_modules\@material\tooltip\foundation.ts" />-->

		<Message Importance="high" Text="***** npm run build-scripts" />
		<Exec Command="npm run build-scripts" />

		<Message Importance="high" Text="***** npm run build-js" />
		<Exec Command="npm run build-js" />

		<Message Importance="high" Text="***** npm run build-min-js" />
		<Exec Command="npm run build-min-js" />

		<Message Importance="high" Text="***** delete intermediate.js" />
		<Delete Files="wwwroot\intermediate.js" />

	</Target>

	<Target Name="BuildStyles" Inputs="@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<Message Importance="high" Text="***** mkdir wwwroot (M.B Styles)" />
		<MakeDir Directories="wwwroot" />

		<Message Importance="high" Text="***** npm install" />
		<Exec Command="npm install" />

		<!--<Message Importance="high" Text="***** downloadfiles" />
    <DownloadFile SourceUrl="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp" DestinationFolder="$(MSBuildProjectDirectory)\wwwroot" DestinationFilename="material-components-icons.css">
    </DownloadFile>-->

		<Message Importance="high" Text="***** npm run build-css" />
		<Exec Command="npm run build-css" />

		<Message Importance="high" Text="***** npm run build-min-css" />
		<Exec Command="npm run build-min-css" />

		<!--<Message Importance="high" Text="***** delete material-components-icons.css" />
    <Delete Files="wwwroot\material-components-icons.css" />-->

		<Message Importance="high" Text="***** npm run build-material-css" />
		<Exec Command="npm run build-material-css" />

		<Message Importance="high" Text="***** npm run build-material-min-css" />
		<Exec Command="npm run build-material-min-css" />

	</Target>

	<ProjectExtensions>
		<VisualStudio>
			<UserProperties />
		</VisualStudio>
	</ProjectExtensions>

	<!--
	SolutionDir is only available to builds in the IDE
	
	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
		<Copy SourceFiles="$(SolutionDir)README.md"
			  DestinationFiles="$(ProjectDir)README.md" />
	</Target>
	-->
	
	<!--
	These two don't work in the IDE

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	  <Exec Command="copy ..\README.md $(projectdir)README.md" />
	</Target>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
		<Copy SourceFiles="README.md"
			  DestinationFiles="$(ProjectDir)README.md" />
	</Target>
	-->
	
</Project>